{
	"info": {
		"_postman_id": "abc656c3-197f-4110-859c-a192ee7738dd",
		"name": "Horizon 8 (2111) REST API",
		"description": "Welcome to the Horizon Server API Reference documentation. This API reference provides comprehensive information about status of all Horizon Server components and resources. <br> Choose Latest spec from dropdown to view API reference on latest version available.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6776974"
	},
	"item": [
		{
			"name": "config",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "ic-domain-accounts",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets instant clone domain account.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates instant clone domain account.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": [\n        \"in consequat\",\n        \"Excepteur Duis dolor\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"password\": [\n        \"ea in Ut\",\n        \"Ut\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"password\": [\n        \"ea in Ut\",\n        \"Ut\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"password\": [\n        \"ea in Ut\",\n        \"Ut\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"password\": [\n        \"ea in Ut\",\n        \"Ut\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes instant clone domain account.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/ic-domain-accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"ic-domain-accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists instant clone domain accounts of the environment.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/ic-domain-accounts?page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"ic-domain-accounts"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b>.<br/>"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts?page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts?page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates instant clone domain account.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ad_domain_id\": \"S-1-5-21-1085031214-1563985344-725345543\",\n    \"password\": [\n        \"nulla cillum Duis\",\n        \"aliquip \"\n    ],\n    \"username\": \"testuser\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/ic-domain-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"ic-domain-accounts"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ad_domain_id\": \"S-1-5-21-1085031214-1563985344-725345543\",\n    \"password\": [\n        \"in reprehenderit exercitation\",\n        \"incididunt ex dolore eiusmod esse\"\n    ],\n    \"username\": \"testuser\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ad_domain_id\": \"S-1-5-21-1085031214-1563985344-725345543\",\n    \"password\": [\n        \"in reprehenderit exercitation\",\n        \"incididunt ex dolore eiusmod esse\"\n    ],\n    \"username\": \"testuser\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ad_domain_id\": \"S-1-5-21-1085031214-1563985344-725345543\",\n    \"password\": [\n        \"in reprehenderit exercitation\",\n        \"incididunt ex dolore eiusmod esse\"\n    ],\n    \"username\": \"testuser\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ad_domain_id\": \"S-1-5-21-1085031214-1563985344-725345543\",\n    \"password\": [\n        \"in reprehenderit exercitation\",\n        \"incididunt ex dolore eiusmod esse\"\n    ],\n    \"username\": \"testuser\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/ic-domain-accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"ic-domain-accounts"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "im-assets",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets image management asset.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates image management asset.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes image management asset.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-assets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists image management assets.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-assets?im_version_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-assets"
											],
											"query": [
												{
													"key": "im_version_id",
													"value": "est ipsum aute ",
													"description": "(Required) Image management version ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets?im_version_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets"
													],
													"query": [
														{
															"key": "im_version_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets?im_version_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets"
													],
													"query": [
														{
															"key": "im_version_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates image management asset.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n    \"additional_details\": {},\n    \"base_snapshot_id\": \"snapshot-1\",\n    \"base_vm_id\": \"vm-2\",\n    \"vm_template_id\": \"vm-1\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-assets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-assets"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n    \"additional_details\": {},\n    \"base_snapshot_id\": \"snapshot-1\",\n    \"base_vm_id\": \"vm-2\",\n    \"vm_template_id\": \"vm-1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n    \"additional_details\": {},\n    \"base_snapshot_id\": \"snapshot-1\",\n    \"base_vm_id\": \"vm-2\",\n    \"vm_template_id\": \"vm-1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n    \"additional_details\": {},\n    \"base_snapshot_id\": \"snapshot-1\",\n    \"base_vm_id\": \"vm-2\",\n    \"vm_template_id\": \"vm-1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clone_type\": \"INSTANT_CLONE\",\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"image_type\": \"RDSH_APPS\",\n    \"status\": \"AVAILABLE\",\n    \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n    \"additional_details\": {},\n    \"base_snapshot_id\": \"snapshot-1\",\n    \"base_vm_id\": \"vm-2\",\n    \"vm_template_id\": \"vm-1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates one or more image management assets. Each of the index of result in the response, correspond to the index of the original asset.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    },\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-assets/action/bulk-create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-assets",
												"action",
												"bulk-create"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    },\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    },\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    },\n    {\n        \"clone_type\": \"INSTANT_CLONE\",\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"image_type\": \"RDSH_APPS\",\n        \"status\": \"AVAILABLE\",\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"additional_details\": {},\n        \"base_snapshot_id\": \"snapshot-1\",\n        \"base_vm_id\": \"vm-2\",\n        \"vm_template_id\": \"vm-1\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-assets/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-assets",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "im-streams",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets image management stream.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates image management stream.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes image management stream.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-streams/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-streams",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists image management streams.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-streams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-streams"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates image management stream.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-streams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-streams"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Win10\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"source\": \"MARKET_PLACE\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"Windows 10 Stream\",\n    \"publisher\": \"VMware\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates one or more image management streams. Each of the index of result in the response, correspond to the index of the original stream.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    },\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-streams/action/bulk-create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-streams",
												"action",
												"bulk-create"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    },\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    },\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    },\n    {\n        \"name\": \"Win10\",\n        \"operating_system\": \"WINDOWS_10\",\n        \"source\": \"MARKET_PLACE\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"Windows 10 Stream\",\n        \"publisher\": \"VMware\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-streams/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-streams",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "im-tags",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets image management tag.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates image management tag.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_version_id\": \"7e85b3a5-e7d0-4ad6-a1e3-37168dd1ed62\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"im_version_id\": \"7e85b3a5-e7d0-4ad6-a1e3-37168dd1ed62\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"im_version_id\": \"7e85b3a5-e7d0-4ad6-a1e3-37168dd1ed62\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"im_version_id\": \"7e85b3a5-e7d0-4ad6-a1e3-37168dd1ed62\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"im_version_id\": \"7e85b3a5-e7d0-4ad6-a1e3-37168dd1ed62\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes image management tag.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-tags",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists image management tags.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-tags?im_stream_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-tags"
											],
											"query": [
												{
													"key": "im_stream_id",
													"value": "est ipsum aute ",
													"description": "(Required) Image management stream ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags?im_stream_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags"
													],
													"query": [
														{
															"key": "im_stream_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags?im_stream_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags"
													],
													"query": [
														{
															"key": "im_stream_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates image management tag.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-tags"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"name\": \"PROD\",\n    \"additional_details\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates one or more image management tags. Each of the index of result in the response, correspond to the index of the original tag.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-tags/action/bulk-create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-tags",
												"action",
												"bulk-create"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"im_version_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n        \"name\": \"PROD\",\n        \"additional_details\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-tags/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-tags",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "im-versions",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets image management version.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates image management version.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"quis ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"quis ut\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"quis ut\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"quis ut\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"quis ut\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes image management version.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/im-versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"im-versions",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists image management versions.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-versions?im_stream_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-versions"
											],
											"query": [
												{
													"key": "im_stream_id",
													"value": "est ipsum aute ",
													"description": "(Required) Image management stream ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions?im_stream_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions"
													],
													"query": [
														{
															"key": "im_stream_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions?im_stream_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions"
													],
													"query": [
														{
															"key": "im_stream_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates image management version.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"pariatur dolore\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-versions"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"pariatur dolore\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"pariatur dolore\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"pariatur dolore\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n    \"name\": \"v1\",\n    \"status\": \"AVAILABLE\",\n    \"additional_details\": {},\n    \"description\": \"pariatur dolore\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates one or more image management versions. Each of the index of result in the response, correspond to the index of the original version.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"commodo dolore\"\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"minim dolor ex ut\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/im-versions/action/bulk-create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"im-versions",
												"action",
												"bulk-create"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"ipsum minim\"\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"dolor aute dolore amet labore\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"ipsum minim\"\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"dolor aute dolore amet labore\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"ipsum minim\"\n    },\n    {\n        \"im_stream_id\": \"abc16e8f-9ba0-4789-a5dd-6880f32c52df\",\n        \"name\": \"v1\",\n        \"status\": \"AVAILABLE\",\n        \"additional_details\": {},\n        \"description\": \"dolor aute dolore amet labore\"\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/im-versions/action/bulk-create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"im-versions",
														"action",
														"bulk-create"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "local-access-groups",
							"item": [
								{
									"name": "Lists all local access groups.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/local-access-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"local-access-groups"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_PERMISSION_VIEW | This privilege is required to read all local access groups.\n| FOLDER_VIEW | This privilege is required to read specific local access groups to which the caller has permission."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieves a local access group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/local-access-groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"local-access-groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_PERMISSION_VIEW | This privilege is required to read all local access groups.\n| FOLDER_VIEW | This privilege is required to read specific local access groups to which the caller has permission."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/local-access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"local-access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "rcx",
							"item": [
								{
									"name": "clients",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Updates the given RCX client.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"rcx",
																"clients",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														}
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Unregisters the given RCX Client",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"rcx",
																"clients",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														}
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/config/v1/rcx/clients/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"config",
																		"v1",
																		"rcx",
																		"clients",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Registers the RCX client",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"example.com\",\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/rcx/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"rcx",
														"clients"
													]
												}
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"example.com\",\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/rcx/clients",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"rcx",
																"clients"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"example.com\",\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/rcx/clients",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"rcx",
																"clients"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"example.com\",\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/rcx/clients",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"rcx",
																"clients"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"example.com\",\n    \"thumbprints\": [\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        },\n        {\n            \"ssl_cert_thumbprint\": \"8f:92:9d:3b:a7:85:55:88:60:cd:e1:c8:1e:70:9a:8b:37:6d:a6:e6\",\n            \"ssl_cert_thumbprint_algorithm\": \"SHA_1\"\n        }\n    ],\n    \"ip_address\": \"127.0.0.1\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/rcx/clients",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"rcx",
																"clients"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists RCX servers of the cluster.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/rcx/servers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"rcx",
												"servers"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/rcx/servers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"rcx",
														"servers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/rcx/servers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"rcx",
														"servers"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "feature",
									"item": [
										{
											"name": "Retrieves the feature settings.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings/feature",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings",
														"feature"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/feature",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"feature"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/feature",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"feature"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates the feature settings.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"cloud_managed\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings/feature",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings",
														"feature"
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"cloud_managed\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/feature",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"feature"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"cloud_managed\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/feature",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"feature"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"cloud_managed\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/feature",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"feature"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "general",
									"item": [
										{
											"name": "Retrieves the general settings.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings/general",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings",
														"general"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/general",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"general"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/general",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"general"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates the general settings.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"application_sso_timeout_policy\": \"ENABLED\",\n    \"client_idle_session_timeout_policy\": \"NEVER\",\n    \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n    \"client_session_timeout_minutes\": 300,\n    \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n    \"store_cal_on_client\": false,\n    \"store_cal_on_connection_server\": false,\n    \"application_sso_timeout_minutes\": 30,\n    \"block_restricted_clients\": false,\n    \"client_idle_session_timeout_minutes\": 300,\n    \"client_max_session_timeout_minutes\": 300,\n    \"console_session_timeout_minutes\": 30,\n    \"display_pre_login_message\": false,\n    \"display_warning_before_forced_logoff\": true,\n    \"enable_automatic_status_updates\": true,\n    \"enable_credential_cleanup_for_htmlaccess\": false,\n    \"enable_multi_factor_re_authentication\": false,\n    \"enable_sending_domain_list\": false,\n    \"enable_server_in_single_user_mode\": true,\n    \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n    \"forced_logoff_timeout_minutes\": 3,\n    \"hide_domain_list_in_client\": true,\n    \"hide_server_information_in_client\": false,\n    \"machine_sso_timeout_minutes\": 300,\n    \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n    \"restricted_client_data\": [\n        {\n            \"type\": \"WINDOWS\",\n            \"version\": \"7.5\"\n        },\n        {\n            \"type\": \"LINUX\",\n            \"version\": \"6.5\"\n        }\n    ],\n    \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings/general",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings",
														"general"
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"application_sso_timeout_policy\": \"ENABLED\",\n    \"client_idle_session_timeout_policy\": \"NEVER\",\n    \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n    \"client_session_timeout_minutes\": 300,\n    \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n    \"store_cal_on_client\": false,\n    \"store_cal_on_connection_server\": false,\n    \"application_sso_timeout_minutes\": 30,\n    \"block_restricted_clients\": false,\n    \"client_idle_session_timeout_minutes\": 300,\n    \"client_max_session_timeout_minutes\": 300,\n    \"console_session_timeout_minutes\": 30,\n    \"display_pre_login_message\": false,\n    \"display_warning_before_forced_logoff\": true,\n    \"enable_automatic_status_updates\": true,\n    \"enable_credential_cleanup_for_htmlaccess\": false,\n    \"enable_multi_factor_re_authentication\": false,\n    \"enable_sending_domain_list\": false,\n    \"enable_server_in_single_user_mode\": true,\n    \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n    \"forced_logoff_timeout_minutes\": 3,\n    \"hide_domain_list_in_client\": true,\n    \"hide_server_information_in_client\": false,\n    \"machine_sso_timeout_minutes\": 300,\n    \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n    \"restricted_client_data\": [\n        {\n            \"type\": \"WINDOWS\",\n            \"version\": \"7.5\"\n        },\n        {\n            \"type\": \"LINUX\",\n            \"version\": \"6.5\"\n        }\n    ],\n    \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/general",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"general"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"application_sso_timeout_policy\": \"ENABLED\",\n    \"client_idle_session_timeout_policy\": \"NEVER\",\n    \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n    \"client_session_timeout_minutes\": 300,\n    \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n    \"store_cal_on_client\": false,\n    \"store_cal_on_connection_server\": false,\n    \"application_sso_timeout_minutes\": 30,\n    \"block_restricted_clients\": false,\n    \"client_idle_session_timeout_minutes\": 300,\n    \"client_max_session_timeout_minutes\": 300,\n    \"console_session_timeout_minutes\": 30,\n    \"display_pre_login_message\": false,\n    \"display_warning_before_forced_logoff\": true,\n    \"enable_automatic_status_updates\": true,\n    \"enable_credential_cleanup_for_htmlaccess\": false,\n    \"enable_multi_factor_re_authentication\": false,\n    \"enable_sending_domain_list\": false,\n    \"enable_server_in_single_user_mode\": true,\n    \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n    \"forced_logoff_timeout_minutes\": 3,\n    \"hide_domain_list_in_client\": true,\n    \"hide_server_information_in_client\": false,\n    \"machine_sso_timeout_minutes\": 300,\n    \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n    \"restricted_client_data\": [\n        {\n            \"type\": \"WINDOWS\",\n            \"version\": \"7.5\"\n        },\n        {\n            \"type\": \"LINUX\",\n            \"version\": \"6.5\"\n        }\n    ],\n    \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/general",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"general"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"application_sso_timeout_policy\": \"ENABLED\",\n    \"client_idle_session_timeout_policy\": \"NEVER\",\n    \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n    \"client_session_timeout_minutes\": 300,\n    \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n    \"store_cal_on_client\": false,\n    \"store_cal_on_connection_server\": false,\n    \"application_sso_timeout_minutes\": 30,\n    \"block_restricted_clients\": false,\n    \"client_idle_session_timeout_minutes\": 300,\n    \"client_max_session_timeout_minutes\": 300,\n    \"console_session_timeout_minutes\": 30,\n    \"display_pre_login_message\": false,\n    \"display_warning_before_forced_logoff\": true,\n    \"enable_automatic_status_updates\": true,\n    \"enable_credential_cleanup_for_htmlaccess\": false,\n    \"enable_multi_factor_re_authentication\": false,\n    \"enable_sending_domain_list\": false,\n    \"enable_server_in_single_user_mode\": true,\n    \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n    \"forced_logoff_timeout_minutes\": 3,\n    \"hide_domain_list_in_client\": true,\n    \"hide_server_information_in_client\": false,\n    \"machine_sso_timeout_minutes\": 300,\n    \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n    \"restricted_client_data\": [\n        {\n            \"type\": \"WINDOWS\",\n            \"version\": \"7.5\"\n        },\n        {\n            \"type\": \"LINUX\",\n            \"version\": \"6.5\"\n        }\n    ],\n    \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/general",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"general"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "security",
									"item": [
										{
											"name": "Retrieves the security settings.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings/security",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings",
														"security"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/security",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"security"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/security",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"security"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates the security settings.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_security_mode\": \"ENABLED\",\n    \"data_recovery_password_hash\": [\n        \"quis Ut in\",\n        \"dolore anim tempor\"\n    ],\n    \"data_recovery_password_hint\": \"password hint\",\n    \"re_auth_secure_tunnel_after_interruption\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings/security",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings",
														"security"
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message_security_mode\": \"ENABLED\",\n    \"data_recovery_password_hash\": [\n        \"quis Ut in\",\n        \"dolore anim tempor\"\n    ],\n    \"data_recovery_password_hint\": \"password hint\",\n    \"re_auth_secure_tunnel_after_interruption\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/security",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"security"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message_security_mode\": \"ENABLED\",\n    \"data_recovery_password_hash\": [\n        \"quis Ut in\",\n        \"dolore anim tempor\"\n    ],\n    \"data_recovery_password_hint\": \"password hint\",\n    \"re_auth_secure_tunnel_after_interruption\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/security",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"security"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message_security_mode\": \"ENABLED\",\n    \"data_recovery_password_hash\": [\n        \"quis Ut in\",\n        \"dolore anim tempor\"\n    ],\n    \"data_recovery_password_hint\": \"password hint\",\n    \"re_auth_secure_tunnel_after_interruption\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/config/v1/settings/security",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"config",
																"v1",
																"settings",
																"security"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Retrieves the configuration settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/v1/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"settings"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the configuration settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"feature_settings\": {\n        \"cloud_managed\": true\n    },\n    \"general_settings\": {\n        \"application_sso_timeout_policy\": \"ENABLED\",\n        \"client_idle_session_timeout_policy\": \"NEVER\",\n        \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n        \"client_session_timeout_minutes\": 300,\n        \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n        \"store_cal_on_client\": false,\n        \"store_cal_on_connection_server\": false,\n        \"application_sso_timeout_minutes\": 30,\n        \"block_restricted_clients\": false,\n        \"client_idle_session_timeout_minutes\": 300,\n        \"client_max_session_timeout_minutes\": 300,\n        \"console_session_timeout_minutes\": 30,\n        \"display_pre_login_message\": false,\n        \"display_warning_before_forced_logoff\": true,\n        \"enable_automatic_status_updates\": true,\n        \"enable_credential_cleanup_for_htmlaccess\": false,\n        \"enable_multi_factor_re_authentication\": false,\n        \"enable_sending_domain_list\": false,\n        \"enable_server_in_single_user_mode\": true,\n        \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n        \"forced_logoff_timeout_minutes\": 3,\n        \"hide_domain_list_in_client\": true,\n        \"hide_server_information_in_client\": false,\n        \"machine_sso_timeout_minutes\": 300,\n        \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n        \"restricted_client_data\": [\n            {\n                \"type\": \"WINDOWS\",\n                \"version\": \"7.5\"\n            },\n            {\n                \"type\": \"LINUX\",\n                \"version\": \"6.5\"\n            }\n        ],\n        \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n    },\n    \"security_settings\": {\n        \"message_security_mode\": \"ENABLED\",\n        \"data_recovery_password_hash\": [\n            \"ut in aute\",\n            \"sit dolor fugiat\"\n        ],\n        \"data_recovery_password_hint\": \"password hint\",\n        \"re_auth_secure_tunnel_after_interruption\": true\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/config/v1/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"settings"
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"feature_settings\": {\n        \"cloud_managed\": true\n    },\n    \"general_settings\": {\n        \"application_sso_timeout_policy\": \"ENABLED\",\n        \"client_idle_session_timeout_policy\": \"NEVER\",\n        \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n        \"client_session_timeout_minutes\": 300,\n        \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n        \"store_cal_on_client\": false,\n        \"store_cal_on_connection_server\": false,\n        \"application_sso_timeout_minutes\": 30,\n        \"block_restricted_clients\": false,\n        \"client_idle_session_timeout_minutes\": 300,\n        \"client_max_session_timeout_minutes\": 300,\n        \"console_session_timeout_minutes\": 30,\n        \"display_pre_login_message\": false,\n        \"display_warning_before_forced_logoff\": true,\n        \"enable_automatic_status_updates\": true,\n        \"enable_credential_cleanup_for_htmlaccess\": false,\n        \"enable_multi_factor_re_authentication\": false,\n        \"enable_sending_domain_list\": false,\n        \"enable_server_in_single_user_mode\": true,\n        \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n        \"forced_logoff_timeout_minutes\": 3,\n        \"hide_domain_list_in_client\": true,\n        \"hide_server_information_in_client\": false,\n        \"machine_sso_timeout_minutes\": 300,\n        \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n        \"restricted_client_data\": [\n            {\n                \"type\": \"WINDOWS\",\n                \"version\": \"7.5\"\n            },\n            {\n                \"type\": \"LINUX\",\n                \"version\": \"6.5\"\n            }\n        ],\n        \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n    },\n    \"security_settings\": {\n        \"message_security_mode\": \"ENABLED\",\n        \"data_recovery_password_hash\": [\n            \"ut in aute\",\n            \"sit dolor fugiat\"\n        ],\n        \"data_recovery_password_hint\": \"password hint\",\n        \"re_auth_secure_tunnel_after_interruption\": true\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"feature_settings\": {\n        \"cloud_managed\": true\n    },\n    \"general_settings\": {\n        \"application_sso_timeout_policy\": \"ENABLED\",\n        \"client_idle_session_timeout_policy\": \"NEVER\",\n        \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n        \"client_session_timeout_minutes\": 300,\n        \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n        \"store_cal_on_client\": false,\n        \"store_cal_on_connection_server\": false,\n        \"application_sso_timeout_minutes\": 30,\n        \"block_restricted_clients\": false,\n        \"client_idle_session_timeout_minutes\": 300,\n        \"client_max_session_timeout_minutes\": 300,\n        \"console_session_timeout_minutes\": 30,\n        \"display_pre_login_message\": false,\n        \"display_warning_before_forced_logoff\": true,\n        \"enable_automatic_status_updates\": true,\n        \"enable_credential_cleanup_for_htmlaccess\": false,\n        \"enable_multi_factor_re_authentication\": false,\n        \"enable_sending_domain_list\": false,\n        \"enable_server_in_single_user_mode\": true,\n        \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n        \"forced_logoff_timeout_minutes\": 3,\n        \"hide_domain_list_in_client\": true,\n        \"hide_server_information_in_client\": false,\n        \"machine_sso_timeout_minutes\": 300,\n        \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n        \"restricted_client_data\": [\n            {\n                \"type\": \"WINDOWS\",\n                \"version\": \"7.5\"\n            },\n            {\n                \"type\": \"LINUX\",\n                \"version\": \"6.5\"\n            }\n        ],\n        \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n    },\n    \"security_settings\": {\n        \"message_security_mode\": \"ENABLED\",\n        \"data_recovery_password_hash\": [\n            \"ut in aute\",\n            \"sit dolor fugiat\"\n        ],\n        \"data_recovery_password_hint\": \"password hint\",\n        \"re_auth_secure_tunnel_after_interruption\": true\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"feature_settings\": {\n        \"cloud_managed\": true\n    },\n    \"general_settings\": {\n        \"application_sso_timeout_policy\": \"ENABLED\",\n        \"client_idle_session_timeout_policy\": \"NEVER\",\n        \"client_max_session_timeout_policy\": \"TIMEOUT_AFTER\",\n        \"client_session_timeout_minutes\": 300,\n        \"machine_sso_timeout_policy\": \"DISABLED_AFTER\",\n        \"store_cal_on_client\": false,\n        \"store_cal_on_connection_server\": false,\n        \"application_sso_timeout_minutes\": 30,\n        \"block_restricted_clients\": false,\n        \"client_idle_session_timeout_minutes\": 300,\n        \"client_max_session_timeout_minutes\": 300,\n        \"console_session_timeout_minutes\": 30,\n        \"display_pre_login_message\": false,\n        \"display_warning_before_forced_logoff\": true,\n        \"enable_automatic_status_updates\": true,\n        \"enable_credential_cleanup_for_htmlaccess\": false,\n        \"enable_multi_factor_re_authentication\": false,\n        \"enable_sending_domain_list\": false,\n        \"enable_server_in_single_user_mode\": true,\n        \"forced_logoff_message\": \"The system will shut down shortly. Please save your work.\",\n        \"forced_logoff_timeout_minutes\": 3,\n        \"hide_domain_list_in_client\": true,\n        \"hide_server_information_in_client\": false,\n        \"machine_sso_timeout_minutes\": 300,\n        \"pre_login_message\": \"Disclaimer : This server is being monitored for suspicious activity.\",\n        \"restricted_client_data\": [\n            {\n                \"type\": \"WINDOWS\",\n                \"version\": \"7.5\"\n            },\n            {\n                \"type\": \"LINUX\",\n                \"version\": \"6.5\"\n            }\n        ],\n        \"restricted_client_message\": \"The system does not support this version of the Horizon client.\"\n    },\n    \"security_settings\": {\n        \"message_security_mode\": \"ENABLED\",\n        \"data_recovery_password_hash\": [\n            \"ut in aute\",\n            \"sit dolor fugiat\"\n        ],\n        \"data_recovery_password_hint\": \"password hint\",\n        \"re_auth_secure_tunnel_after_interruption\": true\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/config/v1/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"v1",
														"settings"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieves the environment settings.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/v1/environment-properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"v1",
										"environment-properties"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v1/environment-properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"environment-properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v1/environment-properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"environment-properties"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists Virtual Centers configured in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/v1/virtual-centers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"v1",
										"virtual-centers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v1/virtual-centers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"virtual-centers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v1/virtual-centers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v1",
												"virtual-centers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "v2",
					"item": [
						{
							"name": "Retrieves the environment settings.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/v2/environment-properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"v2",
										"environment-properties"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v2/environment-properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v2",
												"environment-properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v2/environment-properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v2",
												"environment-properties"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists Virtual Centers configured in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/v2/virtual-centers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"v2",
										"virtual-centers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v2/virtual-centers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v2",
												"virtual-centers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/config/v2/virtual-centers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"v2",
												"virtual-centers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "entitlements/v1",
			"item": [
				{
					"name": "application-pools",
					"item": [
						{
							"name": "Lists the entitlements for Application Pools in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"application-pools"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create the bulk entitlements for a set of application pools",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/application-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"application-pools"
									]
								},
								"description": "The input spec must not contain duplicate Ids."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the bulk entitlements for a set of application pools",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/application-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"application-pools"
									]
								},
								"description": "The input spec must not contain duplicate Ids."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns the IDs of users or groups entitled to a given application pool.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/application-pools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"application-pools",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/application-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"application-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "desktop-pools",
					"item": [
						{
							"name": "Lists the entitlements for Desktop Pools in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"desktop-pools"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create the bulk entitlements for a set of desktop pools",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"desktop-pools"
									]
								},
								"description": "The input spec must not contain duplicate Ids."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the bulk entitlements for a set of desktop pools",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"desktop-pools"
									]
								},
								"description": "The input spec must not contain duplicate Ids."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns the IDs of users or groups entitled to a given desktop pool.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/desktop-pools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"desktop-pools",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "global-application-entitlements",
					"item": [
						{
							"name": "Lists the user or group entitlements for Global Application Entitlements in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-application-entitlements"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the user or group entitlements of global application entitlement.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create the bulk entitlements for a set of Global Application Entitlements",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-application-entitlements"
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>The input spec must not contain duplicate Ids.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the user or group entitlements of global application entitlement.\n"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the bulk entitlements for a set of Global Application Entitlements",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-application-entitlements"
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>The input spec must not contain duplicate Ids.### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the user or group entitlements of global application entitlement.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the user or group entitlements for a Global Application Entitlement.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-application-entitlements",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the user or group entitlements of global application entitlement.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-application-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-application-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "global-desktop-entitlements",
					"item": [
						{
							"name": "Lists the user or group entitlements for Global Desktop Entitlements in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-desktop-entitlements"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the user or group entitlements of global desktop entitlement.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create the bulk entitlements for a set of Global Desktop Entitlements",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-desktop-entitlements"
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>The input spec must not contain duplicate Ids.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the user or group entitlements of global desktop entitlement.\n"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the bulk entitlements for a set of Global Desktop Entitlements",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-desktop-entitlements"
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>The input spec must not contain duplicate Ids.### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the user or group entitlements of global desktop entitlement.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    },\n    {\n        \"ad_user_or_group_ids\": [\n            \"S-1-1-1-3965912346-1012345398-3123456564-123\",\n            \"S-1-2-3-3123456786-1012345398-3123456784-124\"\n        ],\n        \"id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the user or group entitlements for a Global Desktop Entitlement.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entitlements",
										"v1",
										"global-desktop-entitlements",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								},
								"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the user or group entitlements of global desktop entitlement.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/entitlements/v1/global-desktop-entitlements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"entitlements",
												"v1",
												"global-desktop-entitlements",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "external",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "ad-domains",
							"item": [
								{
									"name": "{id}/action",
									"item": [
										{
											"name": "Unbind untrusted domain from the connection server.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/unbind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														":id",
														"action",
														"unbind"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to configure and manage untrusted domain.\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/unbind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"unbind"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/unbind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"unbind"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/unbind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"unbind"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/unbind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"unbind"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/unbind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"unbind"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates untrusted domain.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"labore magna sunt ea Duis\",\n            \"Ut deserunt\"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"magna deserunt ipsum\",\n            \"eu culpa ut nulla voluptate\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														":id",
														"action",
														"update"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to configure and manage untrusted domain.\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"labore magna sunt ea Duis\",\n            \"Ut deserunt\"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"magna deserunt ipsum\",\n            \"eu culpa ut nulla voluptate\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"update"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"labore magna sunt ea Duis\",\n            \"Ut deserunt\"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"magna deserunt ipsum\",\n            \"eu culpa ut nulla voluptate\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"update"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"labore magna sunt ea Duis\",\n            \"Ut deserunt\"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"magna deserunt ipsum\",\n            \"eu culpa ut nulla voluptate\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"update"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"labore magna sunt ea Duis\",\n            \"Ut deserunt\"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"magna deserunt ipsum\",\n            \"eu culpa ut nulla voluptate\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"update"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"labore magna sunt ea Duis\",\n            \"Ut deserunt\"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"magna deserunt ipsum\",\n            \"eu culpa ut nulla voluptate\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-domains/:id/action/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-domains",
																":id",
																"action",
																"update"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists information related to AD Domains of the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/external/v1/ad-domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"ad-domains"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Bind untrusted domain to the connection server.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dns_name\": \"example.com\",\n    \"netbios_name\": \"EXAMPLE\",\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"Duis\",\n            \"enim \"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"velit aliqua non\",\n            \"ut sed proident anim\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/external/v1/ad-domains/action/bind",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"ad-domains",
												"action",
												"bind"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to configure and manage untrusted domain.\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"example.com\",\n    \"netbios_name\": \"EXAMPLE\",\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"Duis\",\n            \"enim \"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"velit aliqua non\",\n            \"ut sed proident anim\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/action/bind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														"action",
														"bind"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"example.com\",\n    \"netbios_name\": \"EXAMPLE\",\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"Duis\",\n            \"enim \"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"velit aliqua non\",\n            \"ut sed proident anim\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/action/bind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														"action",
														"bind"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"example.com\",\n    \"netbios_name\": \"EXAMPLE\",\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"Duis\",\n            \"enim \"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"velit aliqua non\",\n            \"ut sed proident anim\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/action/bind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														"action",
														"bind"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"example.com\",\n    \"netbios_name\": \"EXAMPLE\",\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"Duis\",\n            \"enim \"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"velit aliqua non\",\n            \"ut sed proident anim\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/action/bind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														"action",
														"bind"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"example.com\",\n    \"netbios_name\": \"EXAMPLE\",\n    \"ad_domain_advanced_settings\": {\n        \"ad_domain_context\": \"dc=abc,dc=com\",\n        \"port\": 389,\n        \"ad_domain_auto_discovery\": true,\n        \"ad_domain_controllers\": [\n            \"Duis\",\n            \"enim \"\n        ],\n        \"ad_domain_preferred_site\": \"Bengaluru\"\n    },\n    \"primary_account\": {\n        \"password\": [\n            \"velit aliqua non\",\n            \"ut sed proident anim\"\n        ],\n        \"username\": \"Administrator\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-domains/action/bind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-domains",
														"action",
														"bind"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "ad-users-or-groups",
							"item": [
								{
									"name": "action",
									"item": [
										{
											"name": "Changes the password of AD User",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"new_encrypted_password\": \"4TGdfggfwrrGUPSg4/JK/tYub7lUI8pGtyHd/ty5g8h5=\",\n    \"old_encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RMQOfC\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/change-user-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups",
														"action",
														"change-user-password"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"new_encrypted_password\": \"4TGdfggfwrrGUPSg4/JK/tYub7lUI8pGtyHd/ty5g8h5=\",\n    \"old_encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RMQOfC\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/change-user-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"change-user-password"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"new_encrypted_password\": \"4TGdfggfwrrGUPSg4/JK/tYub7lUI8pGtyHd/ty5g8h5=\",\n    \"old_encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RMQOfC\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/change-user-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"change-user-password"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"new_encrypted_password\": \"4TGdfggfwrrGUPSg4/JK/tYub7lUI8pGtyHd/ty5g8h5=\",\n    \"old_encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RMQOfC\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/change-user-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"change-user-password"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"new_encrypted_password\": \"4TGdfggfwrrGUPSg4/JK/tYub7lUI8pGtyHd/ty5g8h5=\",\n    \"old_encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RMQOfC\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/change-user-password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"change-user-password"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validates the encrypted credentials of AD User",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RM\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/validate-user-encrypted-credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups",
														"action",
														"validate-user-encrypted-credentials"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RM\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/validate-user-encrypted-credentials",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"validate-user-encrypted-credentials"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RM\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/validate-user-encrypted-credentials",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"validate-user-encrypted-credentials"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RM\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/validate-user-encrypted-credentials",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"validate-user-encrypted-credentials"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"encrypted_password\": \"9QYxpdXrcrOGPSSz1/K/pJu8QlYT7pDkaKg/rb3hlw4=\",\n    \"key_id\": \"ut0yGq7CbhtBUGfW3ngjkvjQ2cc=\",\n    \"protected_password_key\": \"Qvvjglg5iZinyuldroueo/hQFyqydMMDJPmfYGgIebqxbU9chJ9I8iM9SCBRHSkSW9y+RM\",\n    \"username\": \"testuser or testuser@example.com\",\n    \"domain\": \"example.com\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/action/validate-user-encrypted-credentials",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"external",
																"v1",
																"ad-users-or-groups",
																"action",
																"validate-user-encrypted-credentials"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists AD users or groups information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/external/v1/ad-users-or-groups?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&group_only=est ipsum aute &page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"ad-users-or-groups"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "group_only",
													"value": "est ipsum aute ",
													"description": "Presence of this query param indicates to filter only groups or only users. \n If passed as \"true\", then only groups are returned.\n If passed as \"false\", then only users are returned.\n If not passed passed at all, then both types are returned."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&group_only=est ipsum aute &page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "group_only",
															"value": "est ipsum aute "
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&group_only=est ipsum aute &page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "group_only",
															"value": "est ipsum aute "
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&group_only=est ipsum aute &page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "group_only",
															"value": "est ipsum aute "
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get information related to AD User or Group",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"ad-users-or-groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/ad-users-or-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"ad-users-or-groups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "datastores",
							"item": [
								{
									"name": "Lists all the datastores from the vCenter for the given host or cluster.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastores?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastores"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "domain-c85",
													"description": "(Required) Host or Cluster ID"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
													"description": "(Required) Virtual Center ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores"
													],
													"query": [
														{
															"key": "host_or_cluster_id",
															"value": "domain-c85"
														},
														{
															"key": "vcenter_id",
															"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores"
													],
													"query": [
														{
															"key": "host_or_cluster_id",
															"value": "domain-c85"
														},
														{
															"key": "vcenter_id",
															"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores"
													],
													"query": [
														{
															"key": "host_or_cluster_id",
															"value": "domain-c85"
														},
														{
															"key": "vcenter_id",
															"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Computes the datastore space requirements for inventory resources.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pool_size\": 16120587,\n    \"source\": \"INSTANT_CLONE\",\n    \"type\": \"FARM\",\n    \"vcenter_id\": \"ed3f92f3-0eef-4bf1-a405-de69f138d382\",\n    \"base_snapshot_id\": \"snapshot-22\",\n    \"base_vm_id\": \"vm-34\",\n    \"id\": \"d0325b13-2bf1-4fa4-b027-e780004f2d1e\",\n    \"use_separate_replica_and_os_disk\": false,\n    \"use_vsan\": false,\n    \"user_assignment\": \"FLOATING\",\n    \"vm_template_id\": \"vm-344\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastores/action/compute-requirements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastores",
												"action",
												"compute-requirements"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| VC_CONFIG_VIEW | This privilege is required to compute space requirements.\n| POOL_VIEW | This privilege is required to access desktop pool or farm for which space requirements are to be computed."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pool_size\": 16120587,\n    \"source\": \"INSTANT_CLONE\",\n    \"type\": \"FARM\",\n    \"vcenter_id\": \"ed3f92f3-0eef-4bf1-a405-de69f138d382\",\n    \"base_snapshot_id\": \"snapshot-22\",\n    \"base_vm_id\": \"vm-34\",\n    \"id\": \"d0325b13-2bf1-4fa4-b027-e780004f2d1e\",\n    \"use_separate_replica_and_os_disk\": false,\n    \"use_vsan\": false,\n    \"user_assignment\": \"FLOATING\",\n    \"vm_template_id\": \"vm-344\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores/action/compute-requirements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores",
														"action",
														"compute-requirements"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pool_size\": 16120587,\n    \"source\": \"INSTANT_CLONE\",\n    \"type\": \"FARM\",\n    \"vcenter_id\": \"ed3f92f3-0eef-4bf1-a405-de69f138d382\",\n    \"base_snapshot_id\": \"snapshot-22\",\n    \"base_vm_id\": \"vm-34\",\n    \"id\": \"d0325b13-2bf1-4fa4-b027-e780004f2d1e\",\n    \"use_separate_replica_and_os_disk\": false,\n    \"use_vsan\": false,\n    \"user_assignment\": \"FLOATING\",\n    \"vm_template_id\": \"vm-344\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores/action/compute-requirements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores",
														"action",
														"compute-requirements"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pool_size\": 16120587,\n    \"source\": \"INSTANT_CLONE\",\n    \"type\": \"FARM\",\n    \"vcenter_id\": \"ed3f92f3-0eef-4bf1-a405-de69f138d382\",\n    \"base_snapshot_id\": \"snapshot-22\",\n    \"base_vm_id\": \"vm-34\",\n    \"id\": \"d0325b13-2bf1-4fa4-b027-e780004f2d1e\",\n    \"use_separate_replica_and_os_disk\": false,\n    \"use_vsan\": false,\n    \"user_assignment\": \"FLOATING\",\n    \"vm_template_id\": \"vm-344\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores/action/compute-requirements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores",
														"action",
														"compute-requirements"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pool_size\": 16120587,\n    \"source\": \"INSTANT_CLONE\",\n    \"type\": \"FARM\",\n    \"vcenter_id\": \"ed3f92f3-0eef-4bf1-a405-de69f138d382\",\n    \"base_snapshot_id\": \"snapshot-22\",\n    \"base_vm_id\": \"vm-34\",\n    \"id\": \"d0325b13-2bf1-4fa4-b027-e780004f2d1e\",\n    \"use_separate_replica_and_os_disk\": false,\n    \"use_vsan\": false,\n    \"user_assignment\": \"FLOATING\",\n    \"vm_template_id\": \"vm-344\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores/action/compute-requirements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores",
														"action",
														"compute-requirements"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pool_size\": 16120587,\n    \"source\": \"INSTANT_CLONE\",\n    \"type\": \"FARM\",\n    \"vcenter_id\": \"ed3f92f3-0eef-4bf1-a405-de69f138d382\",\n    \"base_snapshot_id\": \"snapshot-22\",\n    \"base_vm_id\": \"vm-34\",\n    \"id\": \"d0325b13-2bf1-4fa4-b027-e780004f2d1e\",\n    \"use_separate_replica_and_os_disk\": false,\n    \"use_vsan\": false,\n    \"user_assignment\": \"FLOATING\",\n    \"vm_template_id\": \"vm-344\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/external/v1/datastores/action/compute-requirements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external",
														"v1",
														"datastores",
														"action",
														"compute-requirements"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all the VM snapshots from the vCenter for a given VM.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/base-snapshots?base_vm_id=vm-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"base-snapshots"
									],
									"query": [
										{
											"key": "base_vm_id",
											"value": "vm-1",
											"description": "(Required) VM ID"
										},
										{
											"key": "vcenter_id",
											"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/base-snapshots?base_vm_id=vm-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"base-snapshots"
											],
											"query": [
												{
													"key": "base_vm_id",
													"value": "vm-1"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/base-snapshots?base_vm_id=vm-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"base-snapshots"
											],
											"query": [
												{
													"key": "base_vm_id",
													"value": "vm-1"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/base-snapshots?base_vm_id=vm-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"base-snapshots"
											],
											"query": [
												{
													"key": "base_vm_id",
													"value": "vm-1"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the VMs from a vCenter or a datacenter in that vCenter which may be suitable as snapshots for instant/linked clone desktop or farm creation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/base-vms?datacenter_id=est ipsum aute &filter_incompatible_vms=false&vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"base-vms"
									],
									"query": [
										{
											"key": "datacenter_id",
											"value": "est ipsum aute ",
											"description": "Datacenter ID"
										},
										{
											"key": "filter_incompatible_vms",
											"value": "false",
											"description": "Whether to filter out incompatible VMs"
										},
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/base-vms?datacenter_id=est ipsum aute &filter_incompatible_vms=false&vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"base-vms"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "filter_incompatible_vms",
													"value": "false"
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/base-vms?datacenter_id=est ipsum aute &filter_incompatible_vms=false&vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"base-vms"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "filter_incompatible_vms",
													"value": "false"
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/base-vms?datacenter_id=est ipsum aute &filter_incompatible_vms=false&vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"base-vms"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "filter_incompatible_vms",
													"value": "false"
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the customization specifications from the vCenter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/customization-specifications?vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"customization-specifications"
									],
									"query": [
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/customization-specifications?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"customization-specifications"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/customization-specifications?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"customization-specifications"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/customization-specifications?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"customization-specifications"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the datacenters of a vCenter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/datacenters?vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"datacenters"
									],
									"query": [
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datacenters?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datacenters"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datacenters?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datacenters"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datacenters?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datacenters"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the datastore clusters from the vCenter for the given host or cluster.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/datastore-clusters?host_or_cluster_id=est ipsum aute &vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"datastore-clusters"
									],
									"query": [
										{
											"key": "host_or_cluster_id",
											"value": "est ipsum aute ",
											"description": "(Required) Host or Cluster ID"
										},
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_VIEW | This privilege is required to read datastore clusters.\n| VC_CONFIG_VIEW | This privilege is required to read datastore clusters."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-clusters?host_or_cluster_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-clusters"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-clusters?host_or_cluster_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-clusters"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-clusters?host_or_cluster_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-clusters"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-clusters?host_or_cluster_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-clusters"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-clusters?host_or_cluster_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-clusters"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the folder paths within a Datastore from vCenter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/datastore-paths?datastore_id=datastore-29&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"datastore-paths"
									],
									"query": [
										{
											"key": "datastore_id",
											"value": "datastore-29",
											"description": "(Required) Datastore ID"
										},
										{
											"key": "vcenter_id",
											"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-paths?datastore_id=datastore-29&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-paths"
											],
											"query": [
												{
													"key": "datastore_id",
													"value": "datastore-29"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-paths?datastore_id=datastore-29&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-paths"
											],
											"query": [
												{
													"key": "datastore_id",
													"value": "datastore-29"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/datastore-paths?datastore_id=datastore-29&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"datastore-paths"
											],
											"query": [
												{
													"key": "datastore_id",
													"value": "datastore-29"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the hosts or clusters of the datacenter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/hosts-or-clusters?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"hosts-or-clusters"
									],
									"query": [
										{
											"key": "datacenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Datacenter ID"
										},
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/hosts-or-clusters?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"hosts-or-clusters"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/hosts-or-clusters?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"hosts-or-clusters"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/hosts-or-clusters?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"hosts-or-clusters"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a list of network interface cards (NICs) suitable for configuration on a desktop pool/farm.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/network-interface-cards?base_snapshot_id=est ipsum aute &base_vm_id=est ipsum aute &vcenter_id=est ipsum aute &vm_template_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"network-interface-cards"
									],
									"query": [
										{
											"key": "base_snapshot_id",
											"value": "est ipsum aute ",
											"description": "Base Snapshot ID"
										},
										{
											"key": "base_vm_id",
											"value": "est ipsum aute ",
											"description": "Base VM ID"
										},
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										},
										{
											"key": "vm_template_id",
											"value": "est ipsum aute ",
											"description": "VM Template ID"
										}
									]
								},
								"description": "If the base VM and snapshot are specified, then the NICs  present on the given snapshot are listed.<br/> If the template is specified then the NICs present on the given template are listed."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/network-interface-cards?base_snapshot_id=est ipsum aute &base_vm_id=est ipsum aute &vcenter_id=est ipsum aute &vm_template_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"network-interface-cards"
											],
											"query": [
												{
													"key": "base_snapshot_id",
													"value": "est ipsum aute "
												},
												{
													"key": "base_vm_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vm_template_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/network-interface-cards?base_snapshot_id=est ipsum aute &base_vm_id=est ipsum aute &vcenter_id=est ipsum aute &vm_template_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"network-interface-cards"
											],
											"query": [
												{
													"key": "base_snapshot_id",
													"value": "est ipsum aute "
												},
												{
													"key": "base_vm_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vm_template_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/network-interface-cards?base_snapshot_id=est ipsum aute &base_vm_id=est ipsum aute &vcenter_id=est ipsum aute &vm_template_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"network-interface-cards"
											],
											"query": [
												{
													"key": "base_snapshot_id",
													"value": "est ipsum aute "
												},
												{
													"key": "base_vm_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vm_template_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves all network labels on the given host or cluster",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/network-labels?host_or_cluster_id=est ipsum aute &network_type=DISTRUBUTED_VIRTUAL_PORT_GROUP&vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"network-labels"
									],
									"query": [
										{
											"key": "host_or_cluster_id",
											"value": "est ipsum aute ",
											"description": "(Required) Host or Cluster ID"
										},
										{
											"key": "network_type",
											"value": "DISTRUBUTED_VIRTUAL_PORT_GROUP",
											"description": "Network Type\n* NETWORK: Standard network.\n* OPAQUE_NETWORK: Opaque network.\n* DISTRUBUTED_VIRTUAL_PORT_GROUP: DVS Port group."
										},
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								},
								"description": "API retrieves by filtering on the network type (if specified) that may be suitable for configuration with a desktop pool/farm's network interface card."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/network-labels?host_or_cluster_id=est ipsum aute &network_type=DISTRUBUTED_VIRTUAL_PORT_GROUP&vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"network-labels"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "network_type",
													"value": "DISTRUBUTED_VIRTUAL_PORT_GROUP"
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/network-labels?host_or_cluster_id=est ipsum aute &network_type=DISTRUBUTED_VIRTUAL_PORT_GROUP&vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"network-labels"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "network_type",
													"value": "DISTRUBUTED_VIRTUAL_PORT_GROUP"
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/network-labels?host_or_cluster_id=est ipsum aute &network_type=DISTRUBUTED_VIRTUAL_PORT_GROUP&vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"network-labels"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "est ipsum aute "
												},
												{
													"key": "network_type",
													"value": "DISTRUBUTED_VIRTUAL_PORT_GROUP"
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the resource pools from the vCenter for the given host or cluster.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/resource-pools?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"resource-pools"
									],
									"query": [
										{
											"key": "host_or_cluster_id",
											"value": "domain-c85",
											"description": "(Required) Host or Cluster ID"
										},
										{
											"key": "vcenter_id",
											"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/resource-pools?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"resource-pools"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "domain-c85"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/resource-pools?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"resource-pools"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "domain-c85"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/resource-pools?host_or_cluster_id=domain-c85&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"resource-pools"
											],
											"query": [
												{
													"key": "host_or_cluster_id",
													"value": "domain-c85"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the VMs from a vCenter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/virtual-machines?vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"virtual-machines"
									],
									"query": [
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/virtual-machines?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"virtual-machines"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/virtual-machines?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"virtual-machines"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/virtual-machines?vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"virtual-machines"
											],
											"query": [
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the VM folders from the vCenter for the given datacenter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/vm-folders?datacenter_id=datacenter-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"vm-folders"
									],
									"query": [
										{
											"key": "datacenter_id",
											"value": "datacenter-1",
											"description": "(Required) Datacenter ID"
										},
										{
											"key": "vcenter_id",
											"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/vm-folders?datacenter_id=datacenter-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"vm-folders"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "datacenter-1"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/vm-folders?datacenter_id=datacenter-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"vm-folders"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "datacenter-1"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/vm-folders?datacenter_id=datacenter-1&vcenter_id=d0325b13-2bf1-4fa4-b027-e780004f2d1e",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"vm-folders"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "datacenter-1"
												},
												{
													"key": "vcenter_id",
													"value": "d0325b13-2bf1-4fa4-b027-e780004f2d1e"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all the VM templates from a vCenter or a datacenter for the given vCenter which may be suitable for full clone desktop pool creation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/external/v1/vm-templates?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v1",
										"vm-templates"
									],
									"query": [
										{
											"key": "datacenter_id",
											"value": "est ipsum aute ",
											"description": "Datacenter ID"
										},
										{
											"key": "vcenter_id",
											"value": "est ipsum aute ",
											"description": "(Required) Virtual Center ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/vm-templates?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"vm-templates"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/vm-templates?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"vm-templates"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external/v1/vm-templates?datacenter_id=est ipsum aute &vcenter_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external",
												"v1",
												"vm-templates"
											],
											"query": [
												{
													"key": "datacenter_id",
													"value": "est ipsum aute "
												},
												{
													"key": "vcenter_id",
													"value": "est ipsum aute "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists information related to AD Domains of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/external/v2/ad-domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"external",
								"v2",
								"ad-domains"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external/v2/ad-domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v2",
										"ad-domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external/v2/ad-domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external",
										"v2",
										"ad-domains"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "federation/v1",
			"item": [
				{
					"name": "cpa",
					"item": [
						{
							"name": "action",
							"item": [
								{
									"name": "Removes a pod from Cloud Pod Federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"action",
												"eject"
											]
										},
										"description": "Note: This operation should only be performed against a remote pod that is down and no longer functional. If the remote pod is still operational, an unjoin operation should be used on that pod instead. Upon successful completion of eject operation, the ejected pod's topology will be removed from the Pod Federation. All GlobalEntitlement data that is relevant to the ejected pod will be modified. Eject operation can not be performed against the current pod. \n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"eject"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"eject"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"eject"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"eject"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"eject"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pod_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/eject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"eject"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Initialize Cloud Pod Federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/action/initialize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"action",
												"initialize"
											]
										},
										"description": "Note: The pod on which this command is invoked must not already be part of a Pod Federation or have replica Connection Servers in transitional states. After being initialized, a Pod Federation is created and will have one default member site, which will have a single member pod (the local pod). The Pod Federation topology (Site, Pod, and PodEndpoint) will be automatically populated. A Task Id is returned and can be used to track the progress and status of the initialize operation. \n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/initialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"initialize"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/initialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"initialize"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/initialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"initialize"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/initialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"initialize"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA is initialized for the pod | An active Pod Federation operation is detected",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/initialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"initialize"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Join Cloud Pod Federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": [\n        \"cillum sint ut\",\n        \"voluptate minim exercitation sit Excepteur\"\n    ],\n    \"remote_pod_address\": \"cs1.example.com\",\n    \"username\": \"AD-TEST-DOMAIN\\\\Administrator\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/action/join",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"action",
												"join"
											]
										},
										"description": "Note: At the successful completion of join operation the current pod will become a new member of the Pod Federation. The joining Pod will be assigned to a default Site and that might need to be updated post-join. All Pod Federation topology, including the current pod, will be populated. Join operation can only be performed on a pod that is not already a member of a Pod Federation. The pod on which the operation is performed on must not have replica Connection Servers in transitional states. Join operation can only be sent to a pod that is already a Pod Federation member. A Task Id is returned and can be used to track the progress and status of the join operation. \n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": [\n        \"adipisicing nos\",\n        \"culpa aute non\"\n    ],\n    \"remote_pod_address\": \"cs1.example.com\",\n    \"username\": \"AD-TEST-DOMAIN\\\\Administrator\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/join",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"join"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": [\n        \"adipisicing nos\",\n        \"culpa aute non\"\n    ],\n    \"remote_pod_address\": \"cs1.example.com\",\n    \"username\": \"AD-TEST-DOMAIN\\\\Administrator\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/join",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"join"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": [\n        \"adipisicing nos\",\n        \"culpa aute non\"\n    ],\n    \"remote_pod_address\": \"cs1.example.com\",\n    \"username\": \"AD-TEST-DOMAIN\\\\Administrator\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/join",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"join"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": [\n        \"adipisicing nos\",\n        \"culpa aute non\"\n    ],\n    \"remote_pod_address\": \"cs1.example.com\",\n    \"username\": \"AD-TEST-DOMAIN\\\\Administrator\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/join",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"join"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA is initialized for the pod | An active Pod Federation operation is detected",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": [\n        \"adipisicing nos\",\n        \"culpa aute non\"\n    ],\n    \"remote_pod_address\": \"cs1.example.com\",\n    \"username\": \"AD-TEST-DOMAIN\\\\Administrator\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/join",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"join"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uninitialize Cloud Pod Federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/action/uninitialize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"action",
												"uninitialize"
											]
										},
										"description": "Note: The pod on which this command is invoked must be the only remaining member in the Pod Federation. Invoking uninitialize when there is more than one pod in the Pod Federation will fail. The pod on which the operation is performed must not have replica Connection Servers in transitional states. At the completion of uninitialize, the Pod Federation topology information will be removed and it becomes a non-federated pod. A Task Id is returned and can be used to track the progress and status of the uninitialize operation. \n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/uninitialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"uninitialize"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/uninitialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"uninitialize"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/uninitialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"uninitialize"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/uninitialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"uninitialize"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod | An active Pod Federation operation is detected",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/uninitialize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"uninitialize"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Unjoin from Cloud Pod Federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/action/unjoin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"action",
												"unjoin"
											]
										},
										"description": "Note: At the successful completion of the unjoin operation the current pod will become a non-federated pod that is no longer a member of the Pod Federation. All Pod Federation topology data will be removed from the current pod. GlobalEntitlement reference to this pod will be updated with an unjoin. Unjoin operation can only be performed if the current pod is not the only/last member of a Pod Federation; an uninitialize operation should be performed instead. The pod on which the operation is performed on must not have replica Connection Servers in transitional states. A Task Id is returned and can be used to track the progress and status of the unjoin operation. \n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/unjoin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"unjoin"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/unjoin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"unjoin"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/unjoin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"unjoin"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/unjoin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"unjoin"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod | An active Pod Federation operation is detected",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/action/unjoin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"action",
														"unjoin"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "tasks",
							"item": [
								{
									"name": "Lists all the CPA tasks in the pod federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"tasks"
											]
										},
										"description": "Note: CPA need not be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieves the information for a given task.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "Note: CPA need not be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/cpa/tasks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"cpa",
														"tasks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Retrieves the pod federation details.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/cpa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"cpa"
									]
								},
								"description": "Note: CPA need not be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nLocal connection server status will always be populated. Other details require the respective privilege from the below list: -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW| This privilege is required to access the Pod Federation related data. This will be unset if the privilege is not met.\n| GLOBAL_CONFIG_VIEW | This privilege is required to access the Connection Server Status data. This will be unset if the privilege is not met."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates a Pod Federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Horizon Cloud Pod Federation\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/federation/v1/cpa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"cpa"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE| This privilege is required to update the pod federation."
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Horizon Cloud Pod Federation\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Horizon Cloud Pod Federation\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Horizon Cloud Pod Federation\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Horizon Cloud Pod Federation\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Horizon Cloud Pod Federation\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/cpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"cpa"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "home-sites",
					"item": [
						{
							"name": "Lists all the home sites in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/home-sites?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"home-sites"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW| Global LDAP read privilege is required for Home Site Read. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates the given home sites in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    },\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/federation/v1/home-sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"home-sites"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE| Global LDAP management privilege is required for creating Home Sites. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    },\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    },\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    },\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    },\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    },\n    {\n        \"ad_user_or_group_id\": \"S-1-5-32-551\",\n        \"site_id\": \"32a5ea06-cd09-4609-b3e5-df8379e99c13\",\n        \"global_application_entitlement_id\": \"e285ebe1-194b-4563-80e0-0ad21134c503\",\n        \"global_desktop_entitlement_id\": \"7493bfc7-834a-4d9b-ac7d-b5f60893a3a6\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the given home sites from the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/federation/v1/home-sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"home-sites"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE| Global LDAP management privilege is required for deleting Home Sites. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resolves home sites for a user in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"home-sites",
										"action",
										"resolve"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW| Global LDAP read privilege is required for resolving Home Sites. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												"action",
												"resolve"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												"action",
												"resolve"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												"action",
												"resolve"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												"action",
												"resolve"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												"action",
												"resolve"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user_id\": \"S-1-5-21-3623811015-3361044348\",\n    \"global_application_entitlement_id\": \"751c7619-bc3b-48cd-80d1-29960375b6d8\",\n    \"global_desktop_entitlement_id\": \"9e94a90d-e7c2-40b6-a702-bd781512408d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/action/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												"action",
												"resolve"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves a given home site in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/home-sites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"home-sites",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW| Global LDAP read privilege is required for Home Site Read. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/home-sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"home-sites",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "pod-assignments",
					"item": [
						{
							"name": "Lists all the pod assignments in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/pod-assignments?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"pod-assignments"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Global LDAP Read Privilege is required to read Pod Assignments. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieves a given pod assignment from the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/pod-assignments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"pod-assignments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Global LDAP Read Privilege is required to read a Pod Assignment. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pod-assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pod-assignments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "pods",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "endpoints",
									"item": [
										{
											"name": "Lists all the pod endpoints for the given pod.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id",
														"endpoints"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) Pod ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to perform this operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict | CPA not initialized for the pod",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Retrieves pod endpoint details for the given pod endpoint id in the given pod.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id",
														"endpoints",
														":endpointId"
													],
													"variable": [
														{
															"key": "endpointId",
															"value": "est ipsum aute ",
															"description": "(Required) Pod endpoint ID"
														},
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) Pod ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to perform this operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "endpointId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "endpointId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "endpointId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "endpointId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "endpointId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict | CPA not initialized for the pod",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/federation/v1/pods/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"federation",
																"v1",
																"pods",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "endpointId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Retrieves a given pod from the pod federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) ID of the Pod."
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW| This privilege is required to read a Pod. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the given pod in the pod federation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Cluster-CS-1\",\n    \"site_id\": \"9a892821-8c3d-4e61-9d65-69dfec7b70dc\",\n    \"cloud_managed\": true,\n    \"description\": \"Pod Description.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) ID of the Pod."
												}
											]
										},
										"description": "Only site ID can be updated for cloud managed pods from on-premise interfaces.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE| This privilege is required to update a Pod. |"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Cluster-CS-1\",\n    \"site_id\": \"9a892821-8c3d-4e61-9d65-69dfec7b70dc\",\n    \"cloud_managed\": true,\n    \"description\": \"Pod Description.\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Cluster-CS-1\",\n    \"site_id\": \"9a892821-8c3d-4e61-9d65-69dfec7b70dc\",\n    \"cloud_managed\": true,\n    \"description\": \"Pod Description.\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Cluster-CS-1\",\n    \"site_id\": \"9a892821-8c3d-4e61-9d65-69dfec7b70dc\",\n    \"cloud_managed\": true,\n    \"description\": \"Pod Description.\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Cluster-CS-1\",\n    \"site_id\": \"9a892821-8c3d-4e61-9d65-69dfec7b70dc\",\n    \"cloud_managed\": true,\n    \"description\": \"Pod Description.\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Cluster-CS-1\",\n    \"site_id\": \"9a892821-8c3d-4e61-9d65-69dfec7b70dc\",\n    \"cloud_managed\": true,\n    \"description\": \"Pod Description.\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all the pods in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/pods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"pods"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW| This privilege is required to read Pods. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pods"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pods"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pods"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"pods"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "sites",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrives a given site.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates a site.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes a site.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "Note: The home site, in which this site is used, will also be deleted.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/federation/v1/sites/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"federation",
														"v1",
														"sites",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all the sites in the pod federation.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/federation/v1/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"sites"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to perform this operation. |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a site.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/federation/v1/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"federation",
										"v1",
										"sites"
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege, to perform this operation. |"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"US Site\",\n    \"description\": \"This is US site\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/federation/v1/sites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"federation",
												"v1",
												"sites"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "inventory",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "application-icons",
							"item": [
								{
									"name": "Lists the application icons for the given application pool.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/application-icons?application_pool_id=est ipsum aute ",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"application-icons"
											],
											"query": [
												{
													"key": "application_pool_id",
													"value": "est ipsum aute ",
													"description": "(Required) Application Pool ID"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated application pool. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons?application_pool_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													],
													"query": [
														{
															"key": "application_pool_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons?application_pool_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													],
													"query": [
														{
															"key": "application_pool_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons?application_pool_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													],
													"query": [
														{
															"key": "application_pool_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons?application_pool_id=est ipsum aute ",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													],
													"query": [
														{
															"key": "application_pool_id",
															"value": "est ipsum aute "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates an application icon.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"data\": \"nulla in pariatur officia dolor\",\n    \"height\": 119,\n    \"width\": 149\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/application-icons",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"application-icons"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege to create the Icon. |"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"data\": \"nulla in pariatur officia dolor\",\n    \"height\": 119,\n    \"width\": 149\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"data\": \"nulla in pariatur officia dolor\",\n    \"height\": 119,\n    \"width\": 149\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"data\": \"nulla in pariatur officia dolor\",\n    \"height\": 119,\n    \"width\": 149\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"data\": \"nulla in pariatur officia dolor\",\n    \"height\": 119,\n    \"width\": 149\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"data\": \"nulla in pariatur officia dolor\",\n    \"height\": 119,\n    \"width\": 149\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets application icon.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/application-icons/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"application-icons",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on any of the associated application pools. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-icons/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-icons",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "application-pools",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "action",
											"item": [
												{
													"name": "Associates a custom icon to the application pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id",
																"action",
																"add-custom-icon"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) Application pool ID"
																}
															]
														},
														"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege to associate an Icon with the local application pool. |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to associate an Icon with the application pool if it has Global Application Entitlement. |"
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"add-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"add-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"add-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"add-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"add-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"icon_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/add-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"add-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes the associated custom icon from the application pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id",
																"action",
																"remove-custom-icon"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) Application pool ID"
																}
															]
														},
														"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege to remove an Icon from the local application pool. |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to remove an Icon from the application pool if it has Global Application Entitlement. |"
													},
													"response": [
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "No Content",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/application-pools/:id/action/remove-custom-icon",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"application-pools",
																		":id",
																		"action",
																		"remove-custom-icon"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Gets application pool.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the application pool. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates application pool.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Lorem Ut ipsum pariatur\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"ullamco aute Lorem\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Ut in ut\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"sint esse\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Ut in ut\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"sint esse\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Ut in ut\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"sint esse\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Ut in ut\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"sint esse\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes application pool.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the application pools in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"application-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those application pools, for which the caller has permission to this privilege, on the associated access group of the application pool. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates an application pool.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"reprehenderit ea pariatur nostrud\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"nostrud incididunt\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"application-pools"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"fugiat labore dolo\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"id qui\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"fugiat labore dolo\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"id qui\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"fugiat labore dolo\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"id qui\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"fugiat labore dolo\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"id qui\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Checks if the given name is available for application pool creation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"labore eu anim nostrud\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/application-pools/action/check-name-availability",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"application-pools",
												"action",
												"check-name-availability"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/application-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"application-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "desktop-pools",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "action",
											"item": [
												{
													"name": "Adds machines to the given manual desktop pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"action",
																"add-machines"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Adds the named machines to the given desktop pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    },\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    }\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines-by-name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"action",
																"add-machines-by-name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    },\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines-by-name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines-by-name"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    },\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines-by-name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines-by-name"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    },\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines-by-name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines-by-name"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    },\n    {\n        \"name\": \"machine1\",\n        \"user_id\": \"S-1-1-1-3965912346-1012345398-3123456564-123\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/add-machines-by-name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"add-machines-by-name"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Request the cancellation of the current scheduled push image operation on the specified instant clone desktop pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/cancel-scheduled-push-image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"action",
																"cancel-scheduled-push-image"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: The current operation of the desktop pool must be SCHEDULE_PUSH_IMAGE and cancel action must be called prior to the start time of the schedule push image operation. This operation is applicable for instant clone desktop pools only.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_SVI_IMAGE_MANAGEMENT | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/cancel-scheduled-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"cancel-scheduled-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/cancel-scheduled-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"cancel-scheduled-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/cancel-scheduled-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"cancel-scheduled-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/cancel-scheduled-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"cancel-scheduled-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes machines from the given manual desktop pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/remove-machines",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"action",
																"remove-machines"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/remove-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"remove-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/remove-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"remove-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/remove-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"remove-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/remove-machines",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"remove-machines"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Schedule/reschedule a request to update the image in an instant clone desktop pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"logoff_policy\": \"WAIT_FOR_LOGOFF\",\n    \"add_virtual_tpm\": false,\n    \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"im_tag_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"parent_vm_id\": \"vm-1\",\n    \"snapshot_id\": \"snapshot-1\",\n    \"start_time\": 1587081283000,\n    \"stop_on_first_error\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/schedule-push-image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"action",
																"schedule-push-image"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Request an update of the image in an instant clone desktop pool. This marks the old image to be replaced by new image, which is performed asynchronously. Once the new image is successfully updated, all eligible machines in desktop pool would also be marked for update with new image, this operation is also performed asynchronously.<br>To schedule the request, there should not be any operation on the desktop pool currently.<br>If the current operation of the desktop pool is 'SCHEDULE_PUSH_IMAGE' and schedule has not triggered yet, use this API to reschedule an existing scheduled push image operation. In case of reschedule, other than start time all the parameters of the API should be identical to previous call to this API for the desktop pool.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_SVI_IMAGE_MANAGEMENT | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"logoff_policy\": \"WAIT_FOR_LOGOFF\",\n    \"add_virtual_tpm\": false,\n    \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"im_tag_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"parent_vm_id\": \"vm-1\",\n    \"snapshot_id\": \"snapshot-1\",\n    \"start_time\": 1587081283000,\n    \"stop_on_first_error\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/schedule-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"schedule-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"logoff_policy\": \"WAIT_FOR_LOGOFF\",\n    \"add_virtual_tpm\": false,\n    \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"im_tag_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"parent_vm_id\": \"vm-1\",\n    \"snapshot_id\": \"snapshot-1\",\n    \"start_time\": 1587081283000,\n    \"stop_on_first_error\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/schedule-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"schedule-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"logoff_policy\": \"WAIT_FOR_LOGOFF\",\n    \"add_virtual_tpm\": false,\n    \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"im_tag_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"parent_vm_id\": \"vm-1\",\n    \"snapshot_id\": \"snapshot-1\",\n    \"start_time\": 1587081283000,\n    \"stop_on_first_error\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/schedule-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"schedule-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"logoff_policy\": \"WAIT_FOR_LOGOFF\",\n    \"add_virtual_tpm\": false,\n    \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"im_tag_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"parent_vm_id\": \"vm-1\",\n    \"snapshot_id\": \"snapshot-1\",\n    \"start_time\": 1587081283000,\n    \"stop_on_first_error\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/schedule-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"schedule-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"logoff_policy\": \"WAIT_FOR_LOGOFF\",\n    \"add_virtual_tpm\": false,\n    \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n    \"im_tag_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"parent_vm_id\": \"vm-1\",\n    \"snapshot_id\": \"snapshot-1\",\n    \"start_time\": 1587081283000,\n    \"stop_on_first_error\": true\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/action/schedule-push-image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"action",
																		"schedule-push-image"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "tasks",
											"item": [
												{
													"name": "{task Id}",
													"item": [
														{
															"name": "Gets the task information on the desktop pool.",
															"request": {
																"auth": {
																	"type": "apikey",
																	"apikey": [
																		{
																			"key": "key",
																			"value": "Authorization",
																			"type": "string"
																		},
																		{
																			"key": "value",
																			"value": true,
																			"type": "boolean"
																		},
																		{
																			"key": "in",
																			"value": "header",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"tasks",
																		":taskId"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "est ipsum aute ",
																			"description": "(Required) Desktop pool ID"
																		},
																		{
																			"key": "taskId",
																			"value": "est ipsum aute ",
																			"description": "(Required) Desktop pool task ID"
																		}
																	]
																},
																"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User is not authenticated",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Access to the resource is forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Cancels the instant clone desktop pool push image task.",
															"request": {
																"auth": {
																	"type": "apikey",
																	"apikey": [
																		{
																			"key": "key",
																			"value": "Authorization",
																			"type": "string"
																		},
																		{
																			"key": "value",
																			"value": true,
																			"type": "boolean"
																		},
																		{
																			"key": "in",
																			"value": "header",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId/action/cancel",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"tasks",
																		":taskId",
																		"action",
																		"cancel"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "est ipsum aute ",
																			"description": "(Required) Desktop pool ID"
																		},
																		{
																			"key": "taskId",
																			"value": "est ipsum aute ",
																			"description": "(Required) Desktop pool task ID"
																		}
																	]
																},
																"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_SVI_IMAGE_MANAGEMENT | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
															},
															"response": [
																{
																	"name": "No Content",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId/action/cancel",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId",
																				"action",
																				"cancel"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User is not authenticated",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId/action/cancel",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId",
																				"action",
																				"cancel"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Access to the resource is forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId/action/cancel",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId",
																				"action",
																				"cancel"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks/:taskId/action/cancel",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"inventory",
																				"v1",
																				"desktop-pools",
																				":id",
																				"tasks",
																				":taskId",
																				"action",
																				"cancel"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "taskId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Lists the tasks on the desktop pool.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"tasks"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"tasks"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"tasks"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"tasks"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/tasks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"desktop-pools",
																		":id",
																		"tasks"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Gets the Desktop Pool information.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Lists the installed applications on the given desktop pool.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/installed-applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools",
														":id",
														"installed-applications"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/desktop-pools/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"desktop-pools",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Desktop Pools in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/desktop-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"desktop-pools"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those desktop pools, for which the caller has permission to this privilege, on the associated access group of the desktop pool. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Checks if the given name is available for desktop pool creation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"labore eu anim nostrud\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/desktop-pools/action/check-name-availability",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"desktop-pools",
												"action",
												"check-name-availability"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/desktop-pools/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"desktop-pools",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "farms",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the Farm information.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the farm. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates farm.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"disconnected_session_timeout_minutes\": 89024800,\n        \"empty_session_timeout_minutes\": 11996136,\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 60592747,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false,\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"enable_provisioning\": true,\n        \"max_session_type\": \"LIMITED\",\n        \"min_ready_vms\": 57886582,\n        \"pattern_naming_settings\": {\n            \"max_number_of_rds_servers\": 54038793,\n            \"naming_pattern\": \"vm-{n}-sales\"\n        },\n        \"provisioning_settings\": {\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\"\n        },\n        \"stop_provisioning_on_error\": true,\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\"\n        },\n        \"transparent_page_sharing_scope\": \"VM\",\n        \"max_sessions\": 38797995,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 74948310\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 47747178\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 82367553\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 45768120\n                    }\n                ]\n            }\n        ]\n    },\n    \"description\": \"Farm Description\",\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 42,\n        \"disk_queue_length_threshold\": 19731276,\n        \"disk_read_latency_threshold\": 30416951,\n        \"disk_write_latency_threshold\": 95234488,\n        \"include_session_count\": true,\n        \"memory_threshold\": 46\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege, on current (and to be updated) access group, to update access group and for any other fields, caller should have permission on the current access group. |"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"disconnected_session_timeout_minutes\": 89024800,\n        \"empty_session_timeout_minutes\": 11996136,\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 60592747,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false,\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"enable_provisioning\": true,\n        \"max_session_type\": \"LIMITED\",\n        \"min_ready_vms\": 57886582,\n        \"pattern_naming_settings\": {\n            \"max_number_of_rds_servers\": 54038793,\n            \"naming_pattern\": \"vm-{n}-sales\"\n        },\n        \"provisioning_settings\": {\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\"\n        },\n        \"stop_provisioning_on_error\": true,\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\"\n        },\n        \"transparent_page_sharing_scope\": \"VM\",\n        \"max_sessions\": 38797995,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 74948310\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 47747178\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 82367553\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 45768120\n                    }\n                ]\n            }\n        ]\n    },\n    \"description\": \"Farm Description\",\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 42,\n        \"disk_queue_length_threshold\": 19731276,\n        \"disk_read_latency_threshold\": 30416951,\n        \"disk_write_latency_threshold\": 95234488,\n        \"include_session_count\": true,\n        \"memory_threshold\": 46\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"disconnected_session_timeout_minutes\": 89024800,\n        \"empty_session_timeout_minutes\": 11996136,\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 60592747,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false,\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"enable_provisioning\": true,\n        \"max_session_type\": \"LIMITED\",\n        \"min_ready_vms\": 57886582,\n        \"pattern_naming_settings\": {\n            \"max_number_of_rds_servers\": 54038793,\n            \"naming_pattern\": \"vm-{n}-sales\"\n        },\n        \"provisioning_settings\": {\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\"\n        },\n        \"stop_provisioning_on_error\": true,\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\"\n        },\n        \"transparent_page_sharing_scope\": \"VM\",\n        \"max_sessions\": 38797995,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 74948310\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 47747178\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 82367553\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 45768120\n                    }\n                ]\n            }\n        ]\n    },\n    \"description\": \"Farm Description\",\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 42,\n        \"disk_queue_length_threshold\": 19731276,\n        \"disk_read_latency_threshold\": 30416951,\n        \"disk_write_latency_threshold\": 95234488,\n        \"include_session_count\": true,\n        \"memory_threshold\": 46\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"disconnected_session_timeout_minutes\": 89024800,\n        \"empty_session_timeout_minutes\": 11996136,\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 60592747,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false,\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"enable_provisioning\": true,\n        \"max_session_type\": \"LIMITED\",\n        \"min_ready_vms\": 57886582,\n        \"pattern_naming_settings\": {\n            \"max_number_of_rds_servers\": 54038793,\n            \"naming_pattern\": \"vm-{n}-sales\"\n        },\n        \"provisioning_settings\": {\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\"\n        },\n        \"stop_provisioning_on_error\": true,\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\"\n        },\n        \"transparent_page_sharing_scope\": \"VM\",\n        \"max_sessions\": 38797995,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 74948310\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 47747178\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 82367553\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 45768120\n                    }\n                ]\n            }\n        ]\n    },\n    \"description\": \"Farm Description\",\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 42,\n        \"disk_queue_length_threshold\": 19731276,\n        \"disk_read_latency_threshold\": 30416951,\n        \"disk_write_latency_threshold\": 95234488,\n        \"include_session_count\": true,\n        \"memory_threshold\": 46\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"disconnected_session_timeout_minutes\": 89024800,\n        \"empty_session_timeout_minutes\": 11996136,\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 60592747,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false,\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"enable_provisioning\": true,\n        \"max_session_type\": \"LIMITED\",\n        \"min_ready_vms\": 57886582,\n        \"pattern_naming_settings\": {\n            \"max_number_of_rds_servers\": 54038793,\n            \"naming_pattern\": \"vm-{n}-sales\"\n        },\n        \"provisioning_settings\": {\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\"\n        },\n        \"stop_provisioning_on_error\": true,\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\"\n        },\n        \"transparent_page_sharing_scope\": \"VM\",\n        \"max_sessions\": 38797995,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 74948310\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 47747178\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 82367553\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 45768120\n                    }\n                ]\n            }\n        ]\n    },\n    \"description\": \"Farm Description\",\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 42,\n        \"disk_queue_length_threshold\": 19731276,\n        \"disk_read_latency_threshold\": 30416951,\n        \"disk_write_latency_threshold\": 95234488,\n        \"include_session_count\": true,\n        \"memory_threshold\": 46\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"disconnected_session_timeout_minutes\": 89024800,\n        \"empty_session_timeout_minutes\": 11996136,\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 60592747,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false,\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"enable_provisioning\": true,\n        \"max_session_type\": \"LIMITED\",\n        \"min_ready_vms\": 57886582,\n        \"pattern_naming_settings\": {\n            \"max_number_of_rds_servers\": 54038793,\n            \"naming_pattern\": \"vm-{n}-sales\"\n        },\n        \"provisioning_settings\": {\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\"\n        },\n        \"stop_provisioning_on_error\": true,\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\"\n        },\n        \"transparent_page_sharing_scope\": \"VM\",\n        \"max_sessions\": 38797995,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 74948310\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 47747178\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 82367553\n                    },\n                    {\n                        \"enabled\": true,\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"max_label\": 45768120\n                    }\n                ]\n            }\n        ]\n    },\n    \"description\": \"Farm Description\",\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 42,\n        \"disk_queue_length_threshold\": 19731276,\n        \"disk_read_latency_threshold\": 30416951,\n        \"disk_write_latency_threshold\": 95234488,\n        \"include_session_count\": true,\n        \"memory_threshold\": 46\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes a farm.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege, on the associated access group, to delete the farm. |"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Lists the installed applications on the given farm.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/:id/installed-applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														":id",
														"installed-applications"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, to list the installed applications in a farm. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/farms/:id/installed-applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"farms",
																":id",
																"installed-applications"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Farms in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/farms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"farms"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those farms, for which the caller has permission to this privilege, on the associated access group of the farm. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a farm.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"name\": \"ManualFarm\",\n    \"type\": \"MANUAL\",\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"instant_clone_domain_account_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"max_session_type\": \"LIMITED\",\n        \"pattern_naming_settings\": {\n            \"naming_pattern\": \"vm-{n}-sales\",\n            \"max_number_of_rds_servers\": 28628716\n        },\n        \"provisioning_settings\": {\n            \"datacenter_id\": \"datacenter-1\",\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\",\n            \"vm_folder_id\": \"group-v1\",\n            \"base_snapshot_id\": \"snapshot-1\",\n            \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"im_tag_id\": \"3d45b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"parent_vm_id\": \"vm-2\"\n        },\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\",\n            \"use_separate_datastores_replica_and_os_disks\": false,\n            \"use_view_storage_accelerator\": false,\n            \"use_vsan\": false\n        },\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"enable_provisioning\": true,\n        \"max_sessions\": 70190173,\n        \"min_ready_vms\": 6097428,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 87238591\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 7020706\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 81585380\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 28911691\n                    }\n                ]\n            }\n        ],\n        \"stop_provisioning_on_error\": true,\n        \"transparent_page_sharing_scope\": \"VM\"\n    },\n    \"description\": \"Farm Description\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"grid_vgpus_enabled\": true,\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 63,\n        \"disk_queue_length_threshold\": 20881875,\n        \"disk_read_latency_threshold\": 25508987,\n        \"disk_write_latency_threshold\": 49288779,\n        \"include_session_count\": true,\n        \"memory_threshold\": 63\n    },\n    \"rds_server_ids\": [\n        \"5134796a-322g-5fe5-343f-4daa5d25ebfe\",\n        \"2a43f96c-102b-4ed3-953f-35deg43d43b0ge\"\n    ],\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_minutes\": 67673758,\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_minutes\": 4877931,\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 49856489,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/farms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"farms"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege, on the associated access group, to create the farm. |"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"name\": \"ManualFarm\",\n    \"type\": \"MANUAL\",\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"instant_clone_domain_account_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"max_session_type\": \"LIMITED\",\n        \"pattern_naming_settings\": {\n            \"naming_pattern\": \"vm-{n}-sales\",\n            \"max_number_of_rds_servers\": 27182445\n        },\n        \"provisioning_settings\": {\n            \"datacenter_id\": \"datacenter-1\",\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\",\n            \"vm_folder_id\": \"group-v1\",\n            \"base_snapshot_id\": \"snapshot-1\",\n            \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"im_tag_id\": \"3d45b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"parent_vm_id\": \"vm-2\"\n        },\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\",\n            \"use_separate_datastores_replica_and_os_disks\": false,\n            \"use_view_storage_accelerator\": false,\n            \"use_vsan\": false\n        },\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"enable_provisioning\": true,\n        \"max_sessions\": 65797979,\n        \"min_ready_vms\": 20871840,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 35492584\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 23515687\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 33808527\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 66107943\n                    }\n                ]\n            }\n        ],\n        \"stop_provisioning_on_error\": true,\n        \"transparent_page_sharing_scope\": \"VM\"\n    },\n    \"description\": \"Farm Description\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"grid_vgpus_enabled\": true,\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 29,\n        \"disk_queue_length_threshold\": 62960568,\n        \"disk_read_latency_threshold\": 93201504,\n        \"disk_write_latency_threshold\": 15893740,\n        \"include_session_count\": true,\n        \"memory_threshold\": 44\n    },\n    \"rds_server_ids\": [\n        \"5134796a-322g-5fe5-343f-4daa5d25ebfe\",\n        \"2a43f96c-102b-4ed3-953f-35deg43d43b0ge\"\n    ],\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_minutes\": 68340862,\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_minutes\": 61762078,\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 77882988,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"name\": \"ManualFarm\",\n    \"type\": \"MANUAL\",\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"instant_clone_domain_account_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"max_session_type\": \"LIMITED\",\n        \"pattern_naming_settings\": {\n            \"naming_pattern\": \"vm-{n}-sales\",\n            \"max_number_of_rds_servers\": 27182445\n        },\n        \"provisioning_settings\": {\n            \"datacenter_id\": \"datacenter-1\",\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\",\n            \"vm_folder_id\": \"group-v1\",\n            \"base_snapshot_id\": \"snapshot-1\",\n            \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"im_tag_id\": \"3d45b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"parent_vm_id\": \"vm-2\"\n        },\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\",\n            \"use_separate_datastores_replica_and_os_disks\": false,\n            \"use_view_storage_accelerator\": false,\n            \"use_vsan\": false\n        },\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"enable_provisioning\": true,\n        \"max_sessions\": 65797979,\n        \"min_ready_vms\": 20871840,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 35492584\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 23515687\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 33808527\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 66107943\n                    }\n                ]\n            }\n        ],\n        \"stop_provisioning_on_error\": true,\n        \"transparent_page_sharing_scope\": \"VM\"\n    },\n    \"description\": \"Farm Description\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"grid_vgpus_enabled\": true,\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 29,\n        \"disk_queue_length_threshold\": 62960568,\n        \"disk_read_latency_threshold\": 93201504,\n        \"disk_write_latency_threshold\": 15893740,\n        \"include_session_count\": true,\n        \"memory_threshold\": 44\n    },\n    \"rds_server_ids\": [\n        \"5134796a-322g-5fe5-343f-4daa5d25ebfe\",\n        \"2a43f96c-102b-4ed3-953f-35deg43d43b0ge\"\n    ],\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_minutes\": 68340862,\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_minutes\": 61762078,\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 77882988,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"name\": \"ManualFarm\",\n    \"type\": \"MANUAL\",\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"instant_clone_domain_account_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"max_session_type\": \"LIMITED\",\n        \"pattern_naming_settings\": {\n            \"naming_pattern\": \"vm-{n}-sales\",\n            \"max_number_of_rds_servers\": 27182445\n        },\n        \"provisioning_settings\": {\n            \"datacenter_id\": \"datacenter-1\",\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\",\n            \"vm_folder_id\": \"group-v1\",\n            \"base_snapshot_id\": \"snapshot-1\",\n            \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"im_tag_id\": \"3d45b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"parent_vm_id\": \"vm-2\"\n        },\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\",\n            \"use_separate_datastores_replica_and_os_disks\": false,\n            \"use_view_storage_accelerator\": false,\n            \"use_vsan\": false\n        },\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"enable_provisioning\": true,\n        \"max_sessions\": 65797979,\n        \"min_ready_vms\": 20871840,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 35492584\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 23515687\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 33808527\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 66107943\n                    }\n                ]\n            }\n        ],\n        \"stop_provisioning_on_error\": true,\n        \"transparent_page_sharing_scope\": \"VM\"\n    },\n    \"description\": \"Farm Description\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"grid_vgpus_enabled\": true,\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 29,\n        \"disk_queue_length_threshold\": 62960568,\n        \"disk_read_latency_threshold\": 93201504,\n        \"disk_write_latency_threshold\": 15893740,\n        \"include_session_count\": true,\n        \"memory_threshold\": 44\n    },\n    \"rds_server_ids\": [\n        \"5134796a-322g-5fe5-343f-4daa5d25ebfe\",\n        \"2a43f96c-102b-4ed3-953f-35deg43d43b0ge\"\n    ],\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_minutes\": 68340862,\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_minutes\": 61762078,\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 77882988,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"name\": \"ManualFarm\",\n    \"type\": \"MANUAL\",\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"instant_clone_domain_account_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"max_session_type\": \"LIMITED\",\n        \"pattern_naming_settings\": {\n            \"naming_pattern\": \"vm-{n}-sales\",\n            \"max_number_of_rds_servers\": 27182445\n        },\n        \"provisioning_settings\": {\n            \"datacenter_id\": \"datacenter-1\",\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\",\n            \"vm_folder_id\": \"group-v1\",\n            \"base_snapshot_id\": \"snapshot-1\",\n            \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"im_tag_id\": \"3d45b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"parent_vm_id\": \"vm-2\"\n        },\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\",\n            \"use_separate_datastores_replica_and_os_disks\": false,\n            \"use_view_storage_accelerator\": false,\n            \"use_vsan\": false\n        },\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"enable_provisioning\": true,\n        \"max_sessions\": 65797979,\n        \"min_ready_vms\": 20871840,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 35492584\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 23515687\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 33808527\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 66107943\n                    }\n                ]\n            }\n        ],\n        \"stop_provisioning_on_error\": true,\n        \"transparent_page_sharing_scope\": \"VM\"\n    },\n    \"description\": \"Farm Description\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"grid_vgpus_enabled\": true,\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 29,\n        \"disk_queue_length_threshold\": 62960568,\n        \"disk_read_latency_threshold\": 93201504,\n        \"disk_write_latency_threshold\": 15893740,\n        \"include_session_count\": true,\n        \"memory_threshold\": 44\n    },\n    \"rds_server_ids\": [\n        \"5134796a-322g-5fe5-343f-4daa5d25ebfe\",\n        \"2a43f96c-102b-4ed3-953f-35deg43d43b0ge\"\n    ],\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_minutes\": 68340862,\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_minutes\": 61762078,\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 77882988,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"access_group_id\": \"6fd4638a-381f-4518-aed6-042aa3d9f14c\",\n    \"name\": \"ManualFarm\",\n    \"type\": \"MANUAL\",\n    \"automated_farm_settings\": {\n        \"customization_settings\": {\n            \"instant_clone_domain_account_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"ad_container_rdn\": \"CN=Computers\",\n            \"cloneprep_customization_settings\": {\n                \"post_synchronization_script_name\": \"cloneprep_postsync_script\",\n                \"post_synchronization_script_parameters\": \"p1 p2 p3\",\n                \"power_off_script_name\": \"cloneprep_poweroff_script\",\n                \"power_off_script_parameters\": \"p1 p2 p3\",\n                \"priming_computer_account\": \"a219420d-4799-4517-8f78-39c74c7c4efc\"\n            },\n            \"reuse_pre_existing_accounts\": false\n        },\n        \"max_session_type\": \"LIMITED\",\n        \"pattern_naming_settings\": {\n            \"naming_pattern\": \"vm-{n}-sales\",\n            \"max_number_of_rds_servers\": 27182445\n        },\n        \"provisioning_settings\": {\n            \"datacenter_id\": \"datacenter-1\",\n            \"host_or_cluster_id\": \"domain-s425\",\n            \"resource_pool_id\": \"resgroup-1\",\n            \"vm_folder_id\": \"group-v1\",\n            \"base_snapshot_id\": \"snapshot-1\",\n            \"im_stream_id\": \"6f85b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"im_tag_id\": \"3d45b3a5-e7d0-4ad6-a1e3-37168dd1ed51\",\n            \"parent_vm_id\": \"vm-2\"\n        },\n        \"storage_settings\": {\n            \"datastores\": [\n                {\n                    \"datastore_id\": \"datastore-1\"\n                },\n                {\n                    \"datastore_id\": \"datastore-1\"\n                }\n            ],\n            \"replica_disk_datastore_id\": \"datastore-1\",\n            \"use_separate_datastores_replica_and_os_disks\": false,\n            \"use_view_storage_accelerator\": false,\n            \"use_vsan\": false\n        },\n        \"vcenter_id\": \"f148f3e8-db0e-4abb-9c33-7e5205ccd360\",\n        \"enable_provisioning\": true,\n        \"max_sessions\": 65797979,\n        \"min_ready_vms\": 20871840,\n        \"nics\": [\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 35492584\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 23515687\n                    }\n                ]\n            },\n            {\n                \"network_interface_card_id\": \"c9896e51-48a2-4d82-ae9e-a0246981b473\",\n                \"network_label_assignment_specs\": [\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 33808527\n                    },\n                    {\n                        \"max_label_type\": \"LIMITED\",\n                        \"network_label_name\": \"vm-network\",\n                        \"enabled\": true,\n                        \"max_label\": 66107943\n                    }\n                ]\n            }\n        ],\n        \"stop_provisioning_on_error\": true,\n        \"transparent_page_sharing_scope\": \"VM\"\n    },\n    \"description\": \"Farm Description\",\n    \"display_name\": \"ManualFarm\",\n    \"display_protocol_settings\": {\n        \"allow_users_to_choose_protocol\": true,\n        \"default_display_protocol\": \"PCOIP\",\n        \"grid_vgpus_enabled\": true,\n        \"session_collaboration_enabled\": false\n    },\n    \"enabled\": true,\n    \"load_balancer_settings\": {\n        \"cpu_threshold\": 29,\n        \"disk_queue_length_threshold\": 62960568,\n        \"disk_read_latency_threshold\": 93201504,\n        \"disk_write_latency_threshold\": 15893740,\n        \"include_session_count\": true,\n        \"memory_threshold\": 44\n    },\n    \"rds_server_ids\": [\n        \"5134796a-322g-5fe5-343f-4daa5d25ebfe\",\n        \"2a43f96c-102b-4ed3-953f-35deg43d43b0ge\"\n    ],\n    \"server_error_threshold\": 0,\n    \"session_settings\": {\n        \"disconnected_session_timeout_minutes\": 68340862,\n        \"disconnected_session_timeout_policy\": \"NEVER\",\n        \"empty_session_timeout_minutes\": 61762078,\n        \"empty_session_timeout_policy\": \"AFTER\",\n        \"logoff_after_timeout\": false,\n        \"pre_launch_session_timeout_minutes\": 77882988,\n        \"pre_launch_session_timeout_policy\": \"AFTER\"\n    },\n    \"use_custom_script_for_load_balancing\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Checks if the given name is available for farm creation.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"labore eu anim nostrud\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/farms/action/check-name-availability",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"farms",
												"action",
												"check-name-availability"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, to perform this operation. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/farms/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"farms",
														"action",
														"check-name-availability"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "global-application-entitlements",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "local-application-pools",
											"item": [
												{
													"name": "Lists Local Application Pools which are assigned to Global Application Entitlement.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"local-application-pools"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global application entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a application pool and Farm/Desktop information.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict | CPA not initialized for the pod",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Adds Local Application Pools to Global Application Entitlement.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"local-application-pools"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the global application entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a application pool and Farm/Desktop information.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict | CPA not initialized for the pod",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes Local Application Pools from Global Application Entitlement.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"local-application-pools"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the global application entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a application pool and Farm/Desktop information.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict | CPA not initialized for the pod",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/local-application-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-application-entitlements",
																		":id",
																		"local-application-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Gets the Global Application Entitlement in the environment.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-application-entitlements",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global application entitlement.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict | CPA not initialized for the pod",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Lists Local Application Pools which are compatible with Global Application Entitlement.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/compatible-local-application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-application-entitlements",
														":id",
														"compatible-local-application-pools"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global application entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a application pool and Farm/Desktop information.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/compatible-local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"compatible-local-application-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/compatible-local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"compatible-local-application-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/compatible-local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"compatible-local-application-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/compatible-local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"compatible-local-application-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict | CPA not initialized for the pod",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements/:id/compatible-local-application-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-application-entitlements",
																":id",
																"compatible-local-application-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Global Application Entitlements in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"global-application-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global application entitlement.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-application-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-application-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-application-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-application-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-application-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "global-desktop-entitlements",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "local-desktop-pools",
											"item": [
												{
													"name": "Lists Local Desktop Pools which are assigned to Global Desktop Entitlement.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global desktop entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a desktop pool information.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict | CPA not initialized for the pod",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Adds Local Desktop Pools to Global Desktop Entitlement.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the global desktop entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a desktop pool information.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict | CPA not initialized for the pod",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes Local Desktop Pools from Global Desktop Entitlement.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the global desktop entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a desktop pool information.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict | CPA not initialized for the pod",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/local-desktop-pools",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"global-desktop-entitlements",
																		":id",
																		"local-desktop-pools"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Gets the Global Desktop Entitlement in the environment.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global desktop entitlement.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict | CPA not initialized for the pod",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Lists Local Desktop Pools which are compatible with Global Desktop Entitlement.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/compatible-local-desktop-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements",
														":id",
														"compatible-local-desktop-pools"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global desktop entitlement.\n| POOL_VIEW | Caller should have permission to this privilege with the corresponding access group to read a desktop pool information.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/compatible-local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"compatible-local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/compatible-local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"compatible-local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/compatible-local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"compatible-local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/compatible-local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"compatible-local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict | CPA not initialized for the pod",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements/:id/compatible-local-desktop-pools",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"global-desktop-entitlements",
																":id",
																"compatible-local-desktop-pools"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Global Desktop Entitlements in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"global-desktop-entitlements"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "Note: CPA must be initialized for the pod for invoking this API.<br/>This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege to read the global desktop entitlement.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a Global Desktop Entitlement.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"global-desktop-entitlement\",\n    \"allow_multiple_sessions_per_user\": true,\n    \"allow_users_to_choose_protocol\": true,\n    \"allow_users_to_reset_machines\": true,\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_managed\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"dedicated\": true,\n    \"default_display_protocol\": \"PCOIP\",\n    \"description\": \"global desktop entitlement description\",\n    \"display_assigned_machine_name\": false,\n    \"display_machine_alias\": false,\n    \"display_name\": \"global-desktop-entitlement\",\n    \"enable_client_restrictions\": false,\n    \"enabled\": true,\n    \"multiple_session_auto_clean\": false,\n    \"require_home_site\": false,\n    \"scope\": \"ALL_SITES\",\n    \"session_collaboration_enabled\": false,\n    \"shortcut_locations\": [\n        \"desktop\"\n    ],\n    \"use_home_site\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"global-desktop-entitlements"
											]
										},
										"description": "Note: CPA must be initialized for the pod for invoking this API.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| FEDERATED_LDAP_MANAGE | Caller should have permission to this privilege to manage the global desktop entitlement.\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"global-desktop-entitlement\",\n    \"allow_multiple_sessions_per_user\": true,\n    \"allow_users_to_choose_protocol\": true,\n    \"allow_users_to_reset_machines\": true,\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_managed\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"dedicated\": true,\n    \"default_display_protocol\": \"PCOIP\",\n    \"description\": \"global desktop entitlement description\",\n    \"display_assigned_machine_name\": false,\n    \"display_machine_alias\": false,\n    \"display_name\": \"global-desktop-entitlement\",\n    \"enable_client_restrictions\": false,\n    \"enabled\": true,\n    \"multiple_session_auto_clean\": false,\n    \"require_home_site\": false,\n    \"scope\": \"ALL_SITES\",\n    \"session_collaboration_enabled\": false,\n    \"shortcut_locations\": [\n        \"desktop\"\n    ],\n    \"use_home_site\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"global-desktop-entitlement\",\n    \"allow_multiple_sessions_per_user\": true,\n    \"allow_users_to_choose_protocol\": true,\n    \"allow_users_to_reset_machines\": true,\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_managed\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"dedicated\": true,\n    \"default_display_protocol\": \"PCOIP\",\n    \"description\": \"global desktop entitlement description\",\n    \"display_assigned_machine_name\": false,\n    \"display_machine_alias\": false,\n    \"display_name\": \"global-desktop-entitlement\",\n    \"enable_client_restrictions\": false,\n    \"enabled\": true,\n    \"multiple_session_auto_clean\": false,\n    \"require_home_site\": false,\n    \"scope\": \"ALL_SITES\",\n    \"session_collaboration_enabled\": false,\n    \"shortcut_locations\": [\n        \"desktop\"\n    ],\n    \"use_home_site\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"global-desktop-entitlement\",\n    \"allow_multiple_sessions_per_user\": true,\n    \"allow_users_to_choose_protocol\": true,\n    \"allow_users_to_reset_machines\": true,\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_managed\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"dedicated\": true,\n    \"default_display_protocol\": \"PCOIP\",\n    \"description\": \"global desktop entitlement description\",\n    \"display_assigned_machine_name\": false,\n    \"display_machine_alias\": false,\n    \"display_name\": \"global-desktop-entitlement\",\n    \"enable_client_restrictions\": false,\n    \"enabled\": true,\n    \"multiple_session_auto_clean\": false,\n    \"require_home_site\": false,\n    \"scope\": \"ALL_SITES\",\n    \"session_collaboration_enabled\": false,\n    \"shortcut_locations\": [\n        \"desktop\"\n    ],\n    \"use_home_site\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"global-desktop-entitlement\",\n    \"allow_multiple_sessions_per_user\": true,\n    \"allow_users_to_choose_protocol\": true,\n    \"allow_users_to_reset_machines\": true,\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_managed\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"dedicated\": true,\n    \"default_display_protocol\": \"PCOIP\",\n    \"description\": \"global desktop entitlement description\",\n    \"display_assigned_machine_name\": false,\n    \"display_machine_alias\": false,\n    \"display_name\": \"global-desktop-entitlement\",\n    \"enable_client_restrictions\": false,\n    \"enabled\": true,\n    \"multiple_session_auto_clean\": false,\n    \"require_home_site\": false,\n    \"scope\": \"ALL_SITES\",\n    \"session_collaboration_enabled\": false,\n    \"shortcut_locations\": [\n        \"desktop\"\n    ],\n    \"use_home_site\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"global-desktop-entitlement\",\n    \"allow_multiple_sessions_per_user\": true,\n    \"allow_users_to_choose_protocol\": true,\n    \"allow_users_to_reset_machines\": true,\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_managed\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"dedicated\": true,\n    \"default_display_protocol\": \"PCOIP\",\n    \"description\": \"global desktop entitlement description\",\n    \"display_assigned_machine_name\": false,\n    \"display_machine_alias\": false,\n    \"display_name\": \"global-desktop-entitlement\",\n    \"enable_client_restrictions\": false,\n    \"enabled\": true,\n    \"multiple_session_auto_clean\": false,\n    \"require_home_site\": false,\n    \"scope\": \"ALL_SITES\",\n    \"session_collaboration_enabled\": false,\n    \"shortcut_locations\": [\n        \"desktop\"\n    ],\n    \"use_home_site\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/global-desktop-entitlements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"global-desktop-entitlements"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "machines",
							"item": [
								{
									"name": "action",
									"item": [
										{
											"name": "Checks if the given prefix is available for machine creation.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"labore eu anim nostrud\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"check-name-availability"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, to perform this operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Puts the machines into maintenance mode.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/enter-maintenance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"enter-maintenance"
													]
												},
												"description": "When in maintenance mode, users cannot access the machines. Each response entity in the result corresponds to a machine id in the input."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/enter-maintenance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"enter-maintenance"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/enter-maintenance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"enter-maintenance"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/enter-maintenance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"enter-maintenance"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Puts the machines out of maintenance mode.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/exit-maintenance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"exit-maintenance"
													]
												},
												"description": "Each response entity in the result corresponds to a machine id in the input."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/exit-maintenance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"exit-maintenance"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/exit-maintenance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"exit-maintenance"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/exit-maintenance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"exit-maintenance"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Rebuilds the specified machines.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/rebuild",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"rebuild"
													]
												},
												"description": "Each response entity in the result corresponds to a machine id in the input."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/rebuild",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"rebuild"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/rebuild",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"rebuild"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/rebuild",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"rebuild"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Recovers the specified machines.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"recover"
													]
												},
												"description": "Each response entity in the result corresponds to a machine id in the input."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"recover"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"recover"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"recover"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Resets the specified machines.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"reset"
													]
												},
												"description": "Each response entity in the result corresponds to a machine id in the input."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"reset"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"reset"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"reset"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Restarts the specified machines.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/action/restart",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														"action",
														"restart"
													]
												},
												"description": "Each response entity in the result corresponds to a machine id in the input."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/restart",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"restart"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/restart",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"restart"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/action/restart",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																"action",
																"restart"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "action",
											"item": [
												{
													"name": "Assigns the specified aliases to the assigned users of the machine.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    },\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    }\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-aliases",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id",
																"action",
																"assign-aliases"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "If the alias is already present it gets updated. Each response entity in the result corresponds to a user SID in the input. ### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_MANAGEMENT | Caller should have permission to this privilege to manage machines. | \n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    },\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    },\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    },\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    },\n    {\n        \"ad_user_id\": \"S-1-5-21-2898529287-1016622242-505487308-1553\",\n        \"alias_name\": \"Alias1\"\n    }\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Assigns the specified users to the machine.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id",
																"action",
																"assign-users"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Each response entity in the result corresponds to a user SID in the input."
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-users"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-users"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/assign-users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"assign-users"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Un-assigns the aliases for the specified users from the machine.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-aliases",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id",
																"action",
																"unassign-aliases"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Each response entity in the result corresponds to a user SID in the input. ### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_MANAGEMENT | Caller should have permission to this privilege to manage machines. | \n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Access to the resource is forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-aliases",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-aliases"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Un-assigns the specified users from the machine.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id",
																"action",
																"unassign-users"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "est ipsum aute ",
																	"description": "(Required) id"
																}
															]
														},
														"description": "Deletes the aliases for the users if present. Each response entity in the result corresponds to a user SID in the input."
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-users"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-users"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "User is not authenticated",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
																},
																"url": {
																	"raw": "{{baseUrl}}/inventory/v1/machines/:id/action/unassign-users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"inventory",
																		"v1",
																		"machines",
																		":id",
																		"action",
																		"unassign-users"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Gets the Machine information.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the machine.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allow_delete_from_multi_desktop_pools\": true,\n    \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n    \"archive_persistent_disk\": true,\n    \"delete_from_disk\": true,\n    \"force_logoff_session\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"allow_delete_from_multi_desktop_pools\": true,\n    \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n    \"archive_persistent_disk\": true,\n    \"delete_from_disk\": true,\n    \"force_logoff_session\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"allow_delete_from_multi_desktop_pools\": true,\n    \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n    \"archive_persistent_disk\": true,\n    \"delete_from_disk\": true,\n    \"force_logoff_session\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"allow_delete_from_multi_desktop_pools\": true,\n    \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n    \"archive_persistent_disk\": true,\n    \"delete_from_disk\": true,\n    \"force_logoff_session\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Machines in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"machines"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified machines.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machine_ids\": [\n        \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ],\n    \"machine_delete_data\": {\n        \"allow_delete_from_multi_desktop_pools\": true,\n        \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n        \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n        \"archive_persistent_disk\": true,\n        \"delete_from_disk\": true,\n        \"force_logoff_session\": true\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/machines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"machines"
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"machine_ids\": [\n        \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ],\n    \"machine_delete_data\": {\n        \"allow_delete_from_multi_desktop_pools\": true,\n        \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n        \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n        \"archive_persistent_disk\": true,\n        \"delete_from_disk\": true,\n        \"force_logoff_session\": true\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"machine_ids\": [\n        \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ],\n    \"machine_delete_data\": {\n        \"allow_delete_from_multi_desktop_pools\": true,\n        \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n        \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n        \"archive_persistent_disk\": true,\n        \"delete_from_disk\": true,\n        \"force_logoff_session\": true\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"machine_ids\": [\n        \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ],\n    \"machine_delete_data\": {\n        \"allow_delete_from_multi_desktop_pools\": true,\n        \"archive_datastore_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n        \"archive_datastore_path_id\": \"a219420d-4799-4517-8f78-39c74c7c4efc\",\n        \"archive_persistent_disk\": true,\n        \"delete_from_disk\": true,\n        \"force_logoff_session\": true\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/machines",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"machines"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "physical-machines",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the Physical Machine information.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) Physical machine ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_VIEW | Caller should have permission to this privilege to view the physical machines.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the Physical Machine.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) Physical machine ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to delete the physical machines.\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/physical-machines/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"physical-machines",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Physical Machines in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/physical-machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"physical-machines"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_VIEW | Caller should have permission to this privilege to view the physical machines.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Registers the Physical Machine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dns_name\": \"machine1.example.com\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"description\": \"Newly added physical machine\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/physical-machines/action/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"physical-machines",
												"action",
												"register"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_MACHINE_REGISTER | Caller should have permission to this privilege to register the physical machines.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"machine1.example.com\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"description\": \"Newly added physical machine\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines/action/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines",
														"action",
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"machine1.example.com\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"description\": \"Newly added physical machine\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines/action/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines",
														"action",
														"register"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"machine1.example.com\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"description\": \"Newly added physical machine\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines/action/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines",
														"action",
														"register"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"machine1.example.com\",\n    \"operating_system\": \"WINDOWS_10\",\n    \"description\": \"Newly added physical machine\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/physical-machines/action/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"physical-machines",
														"action",
														"register"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "rds-servers",
							"item": [
								{
									"name": "action",
									"item": [
										{
											"name": "Checks if the given prefix is available for RDS Server creation.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"labore eu anim nostrud\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/check-name-availability",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers",
														"action",
														"check-name-availability"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, to perform this operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/check-name-availability",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"check-name-availability"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Recovers the specified RDS Servers.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers",
														"action",
														"recover"
													]
												},
												"description": "Each response entity in the result corresponds to a RDS Server id in the input.\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to perform the operation on the RDS Server.\n| POOL_MANAGEMENT | If the RDS Server belongs to a farm, caller having permission to this privilege is allowed to perform the operation on the RDS Server.\n| MACHINE_MANAGEMENT | If the RDS Server belongs to a farm, caller having permission to this privilege is allowed to perform the operation on the RDS Server.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"recover"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"recover"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"recover"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Registers the RDS Server.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dns_name\": \"rdsserver1.example.com\",\n    \"operating_system\": \"WINDOWS_SERVER_2012\",\n    \"description\": \"New RDS Server\",\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers",
														"action",
														"register"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_MACHINE_REGISTER | Caller should have permission to this privilege to register the RDS Server.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"dns_name\": \"rdsserver1.example.com\",\n    \"operating_system\": \"WINDOWS_SERVER_2012\",\n    \"description\": \"New RDS Server\",\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"register"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"dns_name\": \"rdsserver1.example.com\",\n    \"operating_system\": \"WINDOWS_SERVER_2012\",\n    \"description\": \"New RDS Server\",\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"register"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"dns_name\": \"rdsserver1.example.com\",\n    \"operating_system\": \"WINDOWS_SERVER_2012\",\n    \"description\": \"New RDS Server\",\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"register"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"dns_name\": \"rdsserver1.example.com\",\n    \"operating_system\": \"WINDOWS_SERVER_2012\",\n    \"description\": \"New RDS Server\",\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/action/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																"action",
																"register"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the RDS Server information.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) RDS Server ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_VIEW | Caller should have permission to this privilege, on the associated access group of RDS Server's farm. |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of RDS Server's farm. |\n| GLOBAL_CONFIG_VIEW | Caller's permission of this privilege is sufficient to read RDS Servers. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates the RDS Server.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"enabled\": true,\n    \"max_sessions_type_configured\": \"LIMITED\",\n    \"max_sessions_count_configured\": 123\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) RDS Server ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to perform the operation on the RDS Server.\n| POOL_MANAGEMENT | If the RDS Server belongs to a farm, caller having permission to this privilege is allowed to perform the operation on the RDS Server.\n| MACHINE_MANAGEMENT | If the RDS Server belongs to a farm, caller having permission to this privilege is allowed to perform the operation on the RDS Server.\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enabled\": true,\n    \"max_sessions_type_configured\": \"LIMITED\",\n    \"max_sessions_count_configured\": 123\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enabled\": true,\n    \"max_sessions_type_configured\": \"LIMITED\",\n    \"max_sessions_count_configured\": 123\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enabled\": true,\n    \"max_sessions_type_configured\": \"LIMITED\",\n    \"max_sessions_count_configured\": 123\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enabled\": true,\n    \"max_sessions_type_configured\": \"LIMITED\",\n    \"max_sessions_count_configured\": 123\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enabled\": true,\n    \"max_sessions_type_configured\": \"LIMITED\",\n    \"max_sessions_count_configured\": 123\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the RDS Server.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) RDS Server ID"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| GLOBAL_CONFIG_MANAGEMENT | Caller should have permission to this privilege to delete the RDS Server.\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/rds-servers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"rds-servers",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the RDS Servers in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/rds-servers?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"rds-servers"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_VIEW | Returns results only for those RDS Servers, for which the caller has permission to this privilege, on the associated access group of RDS Server's farm. |\n| POOL_VIEW | Returns results only for those RDS Servers, for which the caller has permission to this privilege, on the associated access group of RDS Server's farm. |\n| GLOBAL_CONFIG_VIEW | Caller's permission of this privilege is sufficient to read RDS Servers. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/rds-servers?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"rds-servers"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "sessions",
							"item": [
								{
									"name": "action",
									"item": [
										{
											"name": "Disconnects user sessions",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/action/disconnect",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														"action",
														"disconnect"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_MANAGE_VDI_SESSION | Machine session management with the corresponding access group permission is required to perform this operation. |\n| FEDERATED_SESSIONS_MANAGE | Caller's permission of this privilege is sufficient to perform the session operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/disconnect",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"disconnect"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/disconnect",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"disconnect"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/disconnect",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"disconnect"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Logs off user sessions, if they are not locked.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/action/logoff?forced=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														"action",
														"logoff"
													],
													"query": [
														{
															"key": "forced",
															"value": "false",
															"description": "Indicates to Log off session forcibly.\n If passed as \"true\", then sessions are logoff forcibly, even if they are locked.\n If passed as \"false\" or not passed at all, then sessions will be normally logged off, if they are not locked."
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_MANAGE_VDI_SESSION | Machine session management with the corresponding access group permission is required to perform this operation. |\n| FEDERATED_SESSIONS_MANAGE | Caller's permission of this privilege is sufficient to perform the session operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/logoff?forced=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"logoff"
															],
															"query": [
																{
																	"key": "forced",
																	"value": "false"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/logoff?forced=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"logoff"
															],
															"query": [
																{
																	"key": "forced",
																	"value": "false"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/logoff?forced=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"logoff"
															],
															"query": [
																{
																	"key": "forced",
																	"value": "false"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Resets machine of user sessions. The machine must be managed by Virtual Center and the session cannot be an application or an RDS desktop session.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/action/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														"action",
														"reset"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_REBOOT | Machine reboot with the corresponding access group permission is sufficient to reset/restart a session's machine. |\n| FEDERATED_SESSIONS_MANAGE | Caller's permission of this privilege is sufficient to perform the session operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"reset"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"reset"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"reset"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Restarts machine of user sessions. The machine must be managed by Virtual Center and the session cannot be an application or an RDS desktop session.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"dolore voluptate proident laboris\",\n    \"veniam ad quis sit\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/action/restart",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														"action",
														"restart"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_REBOOT | Machine reboot with the corresponding access group permission is sufficient to reset/restart a session's machine. |\n| FEDERATED_SESSIONS_MANAGE | Caller's permission of this privilege is sufficient to perform the session operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/restart",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"restart"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/restart",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"restart"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"nulla in in cupidatat ipsum\",\n    \"voluptate mollit labore eu\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/restart",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"restart"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Sends the message to user sessions",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"Sample Info Message\",\n    \"message_type\": \"INFO\",\n    \"session_ids\": [\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/action/send-message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														"action",
														"send-message"
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_MANAGE_VDI_SESSION | Machine session management with the corresponding access group permission is required to perform this operation. |\n| FEDERATED_SESSIONS_MANAGE | Caller's permission of this privilege is sufficient to perform the session operation. |"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"Sample Info Message\",\n    \"message_type\": \"INFO\",\n    \"session_ids\": [\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/send-message",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"send-message"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"Sample Info Message\",\n    \"message_type\": \"INFO\",\n    \"session_ids\": [\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/send-message",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"send-message"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"Sample Info Message\",\n    \"message_type\": \"INFO\",\n    \"session_ids\": [\n        \"7cdd624f-37d1-46c1-ab96-695a5d13956f\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v1/sessions/action/send-message",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v1",
																"sessions",
																"action",
																"send-message"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the Session information in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/sessions?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"sessions"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b>.<br/>\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_VIEW | Returns results only for those sessions, for which the caller has permission to this privilege, on the associated access group of session's pool or farm. |\n| FEDERATED_SESSIONS_VIEW | Caller's permission of this privilege is sufficient to read sessions. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets the Session information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v1/sessions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v1",
												"sessions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAt least one of the listed privileges is required -  \n| Privileges | Description |\n| ---- | ---- |\n| MACHINE_VIEW | Caller should have permission to this privilege, on the associated access group of session's pool or farm. |\n| FEDERATED_SESSIONS_VIEW | Caller's permission of this privilege is sufficient to read sessions. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v1/sessions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v1",
														"sessions",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "v2",
					"item": [
						{
							"name": "application-pools",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets application pool.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the application pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global application entitlement ID field of a application pool. Else, it will be unset."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates application pool.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"cupidatat\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"non ea in\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "est ipsum aute ",
															"description": "(Required) id"
														}
													]
												},
												"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege, on the associated access group of the application pool. |"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Lorem\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"eiusmod eu pariatur mollit\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Lorem\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"eiusmod eu pariatur mollit\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Lorem\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"eiusmod eu pariatur mollit\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access to the resource is forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Lorem\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"eiusmod eu pariatur mollit\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"Lorem\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"ENABLED_ENFORCED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"eiusmod eu pariatur mollit\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/inventory/v2/application-pools/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"inventory",
																"v2",
																"application-pools",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists the application pools in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"application-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those application pools, for which the caller has permission to this privilege, on the associated access group of the application pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global application entitlement ID field of a application pool. Else, it will be unset."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates an application pool.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"fugiat dolor\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"START_MENU\",\n        \"DESKTOP\"\n    ],\n    \"start_folder\": \"eu ea minim tempor\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/application-pools",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"application-pools"
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_MANAGEMENT | Caller should have permission to this privilege to create the application pool. |"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"ea qui sit ipsum\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"dolor aliqua laboris\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"ea qui sit ipsum\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"dolor aliqua laboris\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"ea qui sit ipsum\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"dolor aliqua laboris\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"ea qui sit ipsum\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"dolor aliqua laboris\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"executable_path\": \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Firefox.lnk\",\n    \"name\": \"Firefox\",\n    \"anti_affinity_data\": {\n        \"anti_affinity_count\": 10,\n        \"anti_affinity_patterns\": [\n            \"*pad.exe\",\n            \"*notepad.???\"\n        ]\n    },\n    \"category_folder_name\": \"dir1\\\\dir2\\\\dir3\\\\dir4\",\n    \"cloud_brokered\": false,\n    \"cs_restriction_tags\": [\n        \"Internal\",\n        \"External\"\n    ],\n    \"description\": \"ea qui sit ipsum\",\n    \"desktop_pool_id\": \"0103796c-102b-4ed3-953f-3dfe3d23e0fe\",\n    \"display_name\": \"Firefox\",\n    \"enable_client_restrictions\": false,\n    \"enable_pre_launch\": false,\n    \"enabled\": true,\n    \"farm_id\": \"855ea6c5-720a-41e1-96f4-958c90e6e424\",\n    \"max_multi_sessions\": 5,\n    \"multi_session_mode\": \"DISABLED\",\n    \"parameters\": \"-p myprofile\",\n    \"publisher\": \"Mozilla Corporation\",\n    \"shortcut_locations\": [\n        \"DESKTOP\",\n        \"START_MENU\"\n    ],\n    \"start_folder\": \"dolor aliqua laboris\",\n    \"supported_file_types_data\": {\n        \"enable_auto_update_file_types\": true,\n        \"enable_auto_update_other_file_types\": true,\n        \"file_types\": [\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            },\n            {\n                \"type\": \".html\",\n                \"description\": \"Firefox Document\"\n            }\n        ],\n        \"other_file_types\": [\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            },\n            {\n                \"name\": \"https\",\n                \"type\": \"URL\",\n                \"description\": \"Firefox URL\"\n            }\n        ]\n    },\n    \"version\": \"72.0.2\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/application-pools",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"application-pools"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "desktop-pools",
							"item": [
								{
									"name": "Lists the desktop pools in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those desktop pools, for which the caller has permission to this privilege, on the associated access group of the desktop pool. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets the desktop pool information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the desktop pool. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "farms",
							"item": [
								{
									"name": "Lists the Farms in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/farms?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"farms"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those farms, for which the caller has permission to this privilege, on the associated access group of the farm. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets the Farm information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/farms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"farms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the farm. |"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/farms/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"farms",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "machines",
							"item": [
								{
									"name": "Lists the Machines in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"machines"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/machines?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"machines"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets the Machine information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v2/machines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v2",
												"machines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"machines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"machines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v2/machines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v2",
														"machines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "v3",
					"item": [
						{
							"name": "application-pools",
							"item": [
								{
									"name": "Lists the application pools in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v3/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v3",
												"application-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those application pools, for which the caller has permission to this privilege, on the associated access group of the application pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global application entitlement ID field of a application pool. Else, it will be unset."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets application pool.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v3/application-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v3",
												"application-pools",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the application pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global application entitlement ID field of a application pool. Else, it will be unset."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/application-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"application-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "desktop-pools",
							"item": [
								{
									"name": "Lists the desktop pools in the environment.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v3/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v3",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
													"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
												},
												{
													"key": "page",
													"value": "1",
													"description": "page, if passed should be > 0."
												},
												{
													"key": "size",
													"value": "10",
													"description": "size, if passed should be > 0"
												}
											]
										},
										"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those desktop pools, for which the caller has permission to this privilege, on the associated access group of the desktop pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global desktop entitlement ID field of a desktop pool. Else, it will be unset."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools"
													],
													"query": [
														{
															"key": "filter",
															"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets the desktop pool information.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/v3/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v3",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										},
										"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the desktop pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global desktop entitlement ID field of a desktop pool. Else, it will be unset."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Access to the resource is forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/inventory/v3/desktop-pools/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"inventory",
														"v3",
														"desktop-pools",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "v4/desktop-pools",
					"item": [
						{
							"name": "Lists the desktop pools in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/v4/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"v4",
										"desktop-pools"
									],
									"query": [
										{
											"key": "filter",
											"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }",
											"description": "filter expression built using fields with <b>'supported filters'</b> as described in output <b>model</b> schema of this API."
										},
										{
											"key": "page",
											"value": "1",
											"description": "page, if passed should be > 0."
										},
										{
											"key": "size",
											"value": "10",
											"description": "size, if passed should be > 0"
										}
									]
								},
								"description": "This API supports <b>Pagination</b> and <b>Filters.</b><br/>For full information on using Filters, refer to 'Horizon Server REST Pagination and Filter Guide' of 'VMware Horizon Server API' in code.vmware.com\n### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Returns results only for those desktop pools, for which the caller has permission to this privilege, on the associated access group of the desktop pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global desktop entitlement ID field of a desktop pool. Else, it will be unset."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools?filter={\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }&page=1&size=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools"
											],
											"query": [
												{
													"key": "filter",
													"value": "{\"type\":\"And\", \"filters\":[{\"type\":\"Equals\", \"name\":\"<>\", \"value\":\"<>\"}] }"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the desktop pool information.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/v4/desktop-pools/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"v4",
										"desktop-pools",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								},
								"description": "### Required Privileges : (This server version allows only Administrators on Root access group to login. These privileges are NOT relevant currently but will be applicable in later server versions.)\nAll the listed privileges are required -  \n| Privileges | Description |\n| ---- | ---- |\n| POOL_VIEW | Caller should have permission to this privilege, on the associated access group of the desktop pool. |\n| FEDERATED_LDAP_VIEW | Caller should have permission to this privilege, to read the global desktop entitlement ID field of a desktop pool. Else, it will be unset."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access to the resource is forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory/v4/desktop-pools/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"v4",
												"desktop-pools",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "monitor",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "pods",
							"item": [
								{
									"name": "Lists monitoring information related to the remote pods.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"pods"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets monitoring information related to the remote pod.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/pods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"pods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict | CPA not initialized for the pod",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/pods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"pods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "true-sso",
							"item": [
								{
									"name": "Lists monitoring information related to True SSO connectors.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/true-sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"true-sso"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/true-sso",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"true-sso"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/true-sso",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"true-sso"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets monitoring information related to a True SSO connector.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/true-sso/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"true-sso",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "est ipsum aute ",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/true-sso/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"true-sso",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/true-sso/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"true-sso",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/monitor/v1/true-sso/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"monitor",
														"v1",
														"true-sso",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets monitoring information related to Connection Server.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/connection-servers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"connection-servers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/connection-servers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"connection-servers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/connection-servers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"connection-servers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/connection-servers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"connection-servers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists metrics of desktop pools (except RDS desktop pools).",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/desktop-pools/metrics?ids=dolore voluptate proident laboris&ids=veniam ad quis sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"desktop-pools",
										"metrics"
									],
									"query": [
										{
											"key": "ids",
											"value": "dolore voluptate proident laboris",
											"description": "(Required) Desktop pool IDs"
										},
										{
											"key": "ids",
											"value": "veniam ad quis sit",
											"description": "(Required) Desktop pool IDs"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/desktop-pools/metrics?ids=nulla in in cupidatat ipsum&ids=voluptate mollit labore eu",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"desktop-pools",
												"metrics"
											],
											"query": [
												{
													"key": "ids",
													"value": "nulla in in cupidatat ipsum"
												},
												{
													"key": "ids",
													"value": "voluptate mollit labore eu"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/desktop-pools/metrics?ids=nulla in in cupidatat ipsum&ids=voluptate mollit labore eu",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"desktop-pools",
												"metrics"
											],
											"query": [
												{
													"key": "ids",
													"value": "nulla in in cupidatat ipsum"
												},
												{
													"key": "ids",
													"value": "voluptate mollit labore eu"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets monitoring information related to farm.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/farms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"farms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/farms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"farms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/farms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"farms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/farms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"farms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets monitoring information related to a Gateway.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/gateways/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"gateways",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/gateways/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"gateways",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/gateways/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"gateways",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/gateways/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"gateways",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets monitoring information related to RDS Server.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/rds-servers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"rds-servers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/rds-servers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"rds-servers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/rds-servers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"rds-servers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/rds-servers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"rds-servers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets Monitoring Information related to a SAML Authenticator",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/saml-authenticators/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"saml-authenticators",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/saml-authenticators/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"saml-authenticators",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/saml-authenticators/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"saml-authenticators",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/saml-authenticators/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"saml-authenticators",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "View Composer is no longer supported from Horizon version 2012 onwards.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/view-composers/:vcId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"view-composers",
										":vcId"
									],
									"variable": [
										{
											"key": "vcId",
											"value": "est ipsum aute ",
											"description": "(Required) vcId"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/view-composers/:vcId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"view-composers",
												":vcId"
											],
											"variable": [
												{
													"key": "vcId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/view-composers/:vcId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"view-composers",
												":vcId"
											],
											"variable": [
												{
													"key": "vcId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/view-composers/:vcId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"view-composers",
												":vcId"
											],
											"variable": [
												{
													"key": "vcId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets monitoring information related to Virtual Center.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v1/virtual-centers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v1",
										"virtual-centers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "est ipsum aute ",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/virtual-centers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"virtual-centers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/virtual-centers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"virtual-centers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v1/virtual-centers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v1",
												"virtual-centers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "v2",
					"item": [
						{
							"name": "Lists monitoring information related to AD Domains of the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/ad-domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"ad-domains"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/ad-domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"ad-domains"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/ad-domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"ad-domains"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists monitoring information related to Connection Servers of the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/connection-servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"connection-servers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/connection-servers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"connection-servers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/connection-servers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"connection-servers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists monitoring information related to Gateways registered in the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/gateways",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"gateways"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/gateways",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"gateways"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/gateways",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"gateways"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists monitoring information related to the remote pods.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/pods",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"pods"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"pods"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"pods"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict | CPA not initialized for the pod",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/pods",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"pods"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists monitoring information related to SAML Authenticators of the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/saml-authenticators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"saml-authenticators"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/saml-authenticators",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"saml-authenticators"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/saml-authenticators",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"saml-authenticators"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "View Composer is no longer supported from Horizon version 2012 onwards.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/view-composers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"view-composers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/view-composers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"view-composers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/view-composers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"view-composers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/view-composers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"view-composers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists monitoring information related to Virtual Centers of the environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/v2/virtual-centers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"v2",
										"virtual-centers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/virtual-centers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"virtual-centers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/monitor/v2/virtual-centers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"v2",
												"virtual-centers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists monitoring information related to AD Domains of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/ad-domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"ad-domains"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/ad-domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"ad-domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/ad-domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"ad-domains"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists monitoring information related to Connection Servers of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/connection-servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"connection-servers"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/connection-servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"connection-servers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/connection-servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"connection-servers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns monitoring information related to Event database of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/event-database",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"event-database"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/event-database",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"event-database"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/event-database",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"event-database"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists monitoring information related to Farms of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/farms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"farms"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/farms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"farms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/farms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"farms"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists monitoring information related to Gateways registered in the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/gateways",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"gateways"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/gateways",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"gateways"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/gateways",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"gateways"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists monitoring information related to RDS Servers of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/rds-servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"rds-servers"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/rds-servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"rds-servers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/rds-servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"rds-servers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists monitoring information related to SAML Authenticators of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/saml-authenticators",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"saml-authenticators"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/saml-authenticators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"saml-authenticators"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/saml-authenticators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"saml-authenticators"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "View Composer is no longer supported from Horizon version 2012 onwards.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/view-composers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"view-composers"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/view-composers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"view-composers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/view-composers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"view-composers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/view-composers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"view-composers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists monitoring information related to Virtual Centers of the environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitor/virtual-centers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitor",
								"virtual-centers"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/virtual-centers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"virtual-centers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitor/virtual-centers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"virtual-centers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Logs in a user. Returns access token and refresh token.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.globals.set(\"JWtoken\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{username}}\",\n    \"password\": \"{{password}}\",\n    \"domain\": \"{{domain}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Note: UPN(e.g. testadmin@example.com) based login is not supported.<br/> Only Administrators on Root access group are allowed to login."
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"AD-TEST-DOMAIN\",\n    \"password\": [\n        \"no\",\n        \"dolore irure\"\n    ],\n    \"username\": \"Administrator\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"AD-TEST-DOMAIN\",\n    \"password\": [\n        \"no\",\n        \"dolore irure\"\n    ],\n    \"username\": \"Administrator\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "User is not authenticated",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"AD-TEST-DOMAIN\",\n    \"password\": [\n        \"no\",\n        \"dolore irure\"\n    ],\n    \"username\": \"Administrator\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Logs out a user.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Refreshes access token from refresh token.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/refresh",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"refresh"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<jwt.refresh.token>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{JWtoken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://horizonserver/rest",
			"type": "string"
		},
		{
			"key": "Username",
			"value": "Enter Username",
			"type": "string"
		},
		{
			"key": "Password",
			"value": "Enter Password",
			"type": "string"
		},
		{
			"key": "Domain",
			"value": "Enter Domain",
			"type": "string"
		}
	]
}